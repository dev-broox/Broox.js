{"mappings":"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","sources":["src/modules/analytics/Analytics.module.ts","src/modules/analytics/Report.ts","src/modules/analytics/Category.ts","src/modules/analytics/Day.ts","src/modules/analytics/Month.ts"],"sourcesContent":["/**\r\n * Analytics API.\r\n *\r\n * #### Functions\r\n * - {@link getProfile}\r\n *   <br/>\r\n *   Gets profile information.\r\n * - {@link getProduct}\r\n *   <br/>\r\n *   Gets product information.\r\n * - {@link getAudiences}\r\n *   <br/>\r\n *   Gets audiences.\r\n * - {@link getCollapsed}\r\n *   <br/>\r\n *   Gets stores with installations, campaigns and categories.\r\n * - {@link getByYear}\r\n *   <br/>\r\n *   Gets information grouped by year.\r\n * - {@link getByMonth}\r\n *   <br/>\r\n *   Gets information grouped by month.\r\n * - {@link getByWeekday}\r\n *   <br/>\r\n *   Gets information grouped by weekday.\r\n * - {@link getByHour}\r\n *   <br/>\r\n *   Gets information grouped by hour.\r\n * \r\n * @module analytics\r\n */\r\n\r\nexport { getProfile, getProduct, getAudiences, getClient, getCollapsed, getByYear, getByMonth, getByWeekday, getByHour } from './Report';\r\n","import { Category } from './Category';\r\nimport { Day } from './Day';\r\nimport { Month } from './Month';\r\n\r\n/**\r\n * Gets profile information.\r\n * @param filter Options to narrow down the result.\r\n * @param project Studio project.\r\n * @param clientId Studio client id.\r\n * @param token Studio token.\r\n * @returns Profile information (traffic, views, attention, dwell, emotions, genders and ages).\r\n * ``` typescript\r\n * // example\r\n * getProfile({}, 'broox-studio-development', clientId, token).then(result => {\r\n *   console.log('views', result.views);\r\n * }\r\n * ```\r\n */\r\nexport const getProfile = async (filter: any, project: string, clientId: string, token: string) => {\r\n  // TODO: check value format\r\n  // traffic\r\n  const traffic = await get('eventcount', { ...filter, ev_action: 'in', ev_category: 'profile' }, project, clientId, token);\r\n  // views\r\n  const views = await get('eventcount', { ...filter, is_view: true, ev_action: 'out', ev_category: 'profile' }, project, clientId, token);\r\n  // genders\r\n  let result = await get('split', { ...filter, _split: 'target_gender' }, project, clientId, token);\r\n  const labelsMap = new Map([ ['M', 'Male'], ['F', 'Female'] ]);\r\n  const genders = { data: [], labels: [] };\r\n  for(let i = 0; i < result.split.length; i++) {\r\n    genders.labels.push(labelsMap.get(result.split[i].key));\r\n    genders.data.push(result.split[i].doc_count);\r\n  }\r\n  // ages\r\n  const ageRanges = {\r\n    _range1: '0-20', _range1_key: 'Children (0-20)',\r\n    _range2: '21-40', _range2_key: 'Young (21-40)',\r\n    _range3: '41-60', _range3_key: 'Middle Age (41-60)',\r\n    _range4: '61-99', _range4_key: 'Elder (61-99)'\r\n  };\r\n  result = await get('ranges', { ...filter, ...ageRanges, _split: 'target_age' }, project, clientId, token);\r\n  const ages = { \r\n    labels: [ '<20', '21-40', '41-60', '>60' ],\r\n    data: [\r\n      result.split[ageRanges._range1_key].doc_count,\r\n      result.split[ageRanges._range2_key].doc_count,\r\n      result.split[ageRanges._range3_key].doc_count,\r\n      result.split[ageRanges._range4_key].doc_count\r\n    ]\r\n  };\r\n  // dwell\r\n  const dwell = await get('average', { ...filter, _avgfield: 'target_dwell', ev_action: 'out', ev_category: 'profile' }, project, clientId, token);\r\n  // attention\r\n  const attention = await get('average', { ...filter, _avgfield: 'target_attention', ev_action: 'out', ev_category: 'profile' }, project, clientId, token);\r\n  // emotion\r\n  result = await get('split', { ...filter, _split: 'target_dominant_emotion' }, project, clientId, token);\r\n  const emotions = { data: [], labels: [] };\r\n  for(let i = 0; i < result.split.length; i++) {\r\n    emotions.labels.push(result.split[i].key);\r\n    emotions.data.push(result.split[i].doc_count);\r\n  }\r\n  return { traffic, views, genders, ages, dwell, attention, emotions };\r\n}\r\n\r\n/**\r\n * Gets product information\r\n * @param filter Options to narrow down the result.\r\n * @param project Studio project.\r\n * @param clientId Studio client id.\r\n * @param token Studio token.\r\n * @returns Product information (interactions, interaction time, most interacted and product distribution).\r\n * ``` typescript\r\n * // example\r\n * getProduct({}, ['marker'], audiences, 'broox-studio-development', clientId, token).then(result => {\r\n *   console.log('product distribution', result.productDistribution);\r\n * }\r\n * ```\r\n */\r\nexport const getProduct = async (filter: any, categories: string[], audiences: { id: string, name: string }[], project: string, clientId: string, token: string) => {\r\n  // TODO: check value format\r\n  // interactions\r\n  const c = categories.filter(c => c === Category.Sensor || c === Category.Marker);\r\n  const category = c.join('|');\r\n  const interactions = await get('eventcount', { ...filter, ev_category: category, ev_action: 'in' }, project, clientId, token);\r\n  // interaction time\r\n  const interactionTime = await get('average', { ...filter, ev_category: category, _avgfield: 'target_attention_time', ev_action: 'out' }, project, clientId, token);\r\n  // most interacted\r\n  const mostInteracted = await get('topcount', { ...filter, ev_category: category, ev_action: 'in' }, project, clientId, token);\r\n  // product distribution\r\n  let result = await get('split', { ...filter, ev_category: category, _split: 'audience_id', _aggregate: 'avg', _aggregate_field: 'target_attention_time', ev_action: 'in' }, project, clientId, token);\r\n  const productDistribution = [];\r\n  const labelsMap = new Map();\r\n  for(let audience of audiences) {\r\n    labelsMap.set(audience.id, audience.name);\r\n  }\r\n  for(let i = 0; i < result.split.length; i++) {\r\n    productDistribution.push({\r\n      name: labelsMap.get(result.split[i].key),\r\n      value: result.split[i].doc_count\r\n    });\r\n  }\r\n  return { interactions, interactionTime, mostInteracted, productDistribution };\r\n}\r\n\r\n/**\r\n * Gets information grouped by year.\r\n * @param filter Options to narrow down the result.\r\n * @param project Studio project.\r\n * @param clientId Studio client id.\r\n * @param token Studio token.\r\n * @returns Information grouped by year (age, attention, dwell, gender, lift interactions, lift time, place interaction, place time, product distribution, traffic and views).\r\n * ``` typescript\r\n * // example\r\n * getByYear({}, 'broox-studio-development', clientId, token).then(result => {\r\n *   console.log('views by year', result.views);\r\n * }\r\n * ```\r\n */\r\nexport const getByYear = async (filter: any, project: string, clientId: string, token: string) => {\r\n  // gender\r\n  let f = { ...filter, _split0: 'year', _split1: 'target_gender' };\r\n  let result = await get('multisplit', f, project, clientId, token);\r\n  const genderMap = new Map<number, any>();\r\n  for(let i = 0; i < result.split.length; i++) {\r\n    const value = genderMap.get(result.split[i].key[0]) || { M: 0, F: 0 };\r\n    value[result.split[i].key[1]] = filter._aggregate === 'avg' ? result.split[i].avg.value : result.split[i].doc_count;\r\n    genderMap.set(result.split[i].key[0], value);\r\n  }\r\n  const genderData: any[] = [[], []];\r\n  for(const v of genderMap.values()) {\r\n    genderData[0].push(v.M);\r\n    genderData[1].push(v.f);\r\n  }\r\n  const gender = { data: genderData, labels: Array.from(genderMap.keys()) };\r\n  // age\r\n  f = { ...filter, _field_term: 'year', _field_ranges: 'target_age', _range1: '0-20',_range1_key: 'r1', _range2: '21-40', _range2_key: 'r2', _range3: '41-60', _range3_key: 'r3', _range4: '61-99', _range4_key: 'r4' };\r\n  result = await get('multisplit_range', f, project, clientId, token);\r\n  const ageMap = new Map<number, any>();\r\n  for(let i = 0; i < result.split.length; i++) {\r\n    const year = ageMap.get(result.split[i].key) || { name: result.split[i].key, r1: 0, r2: 0, r3: 0, r4: 0 };\r\n    year.r1 = result.split[i].split.buckets['r1'].doc_count;\r\n    year.r2 = result.split[i].split.buckets['r2'].doc_count;\r\n    year.r3 = result.split[i].split.buckets['r3'].doc_count;\r\n    year.r4 = result.split[i].split.buckets['r4'].doc_count;\r\n    ageMap.set(result.split[i].key, year);\r\n  }\r\n  const age = { data: [[], [], [], []], labels: [] };\r\n  for(const v of ageMap.values()) {\r\n    age.data[0].push(v.r1);\r\n    age.data[1].push(v.r2);\r\n    age.data[2].push(v.r3);\r\n    age.data[3].push(v.r4);\r\n    age.labels.push(v.name);\r\n  }\r\n  // product distribution\r\n  f = { ...filter, _split0: 'year', _split1: 'audience_id', _aggregate: 'avg', _aggregate_field: 'target_attention_time' };\r\n  result = await get('multisplit', f, project, clientId, token);\r\n  const productDistributionMap = new Map<number, any>();\r\n  for(let i = 0; i < result.split.length; i++) {\r\n    const value = productDistributionMap.get(result.split[i].key[0]) || { name: result.split[i].key[0] };\r\n    value[result.split[i].key[1]] = f._aggregate === 'avg' ? result.split[i].avg.value : result.split[i].doc_count;\r\n    productDistributionMap.set(result.split[i].key[0], value);\r\n  }\r\n  const productDistribution = { data: {}, labels: [] };\r\n  for(const v of productDistributionMap.values()) {\r\n    for(const prop in v) {\r\n      if(prop === 'name') {\r\n        productDistribution.labels.push(v.name);    \r\n      }\r\n      else {\r\n        !productDistribution.data[prop] && (productDistribution.data[prop] = []);\r\n        productDistribution.data[prop].push(v[prop]);\r\n      }\r\n    }\r\n  }\r\n  const main = await by(splitByYear, filter, project, clientId, token);\r\n  return { ...main, gender, age, productDistribution };\r\n}\r\n\r\n/**\r\n * Gets information grouped by month.\r\n * @param filter Options to narrow down the result.\r\n * @param project Studio project.\r\n * @param clientId Studio client id.\r\n * @param token Studio token.\r\n * @returns Information grouped by month (age, attention, dwell, gender, lift interactions, lift time, place interaction, place time, product distribution, traffic and views).\r\n * ``` typescript\r\n * // example\r\n * getByMonth({}, 'broox-studio-development', clientId, token).then(result => {\r\n *   console.log('traffic by month', result.traffic);\r\n * }\r\n * ```\r\n */\r\nexport const getByMonth = async (filter: any, project: string, clientId: string, token: string) => {\r\n  // gender\r\n  const genderValues = new Map<string, any>();\r\n  const ageValues = new Map<string, any>();\r\n  const productDistributionValues = new Map<string, any>();\r\n  let i = 1;\r\n  Object.values(Month).filter(m => typeof m === 'string').forEach(m => {\r\n    genderValues.set((i).toString(), { name: m.toString(), M: 0, F: 0 });\r\n    ageValues.set((i).toString(), { name: m.toString(), r1: 0, r2: 0, r3: 0, r4: 0 });\r\n    productDistributionValues.set((i++).toString(), { name: m.toString() });\r\n  });\r\n  const gender = await multisplitBy('month', 'target_gender', genderValues, filter, project, clientId, token);\r\n  const age = await ageBy('month', ageValues, filter, project, clientId, token);\r\n  const f = { ...filter, _aggregate: 'avg', _aggregate_field: 'target_attention_time' };\r\n  const productDistribution = await multisplitBy('month', 'audience_id', productDistributionValues, f, project, clientId, token);\r\n  const main = await by(splitByMonth, filter, project, clientId, token);\r\n  return { ...main, gender, age, productDistribution };\r\n}\r\n\r\n/**\r\n * Gets information grouped by week day.\r\n * @param filter Options to narrow down the result.\r\n * @param project Studio project.\r\n * @param clientId Studio client id.\r\n * @param token Studio token.\r\n * @returns Information grouped by week day (age, attention, dwell, gender, lift interactions, lift time, place interaction, place time, product distribution, traffic and views).\r\n * ``` typescript\r\n * // example\r\n * getByWeekday({}, 'broox-studio-development', clientId, token).then(result => {\r\n *   console.log('attention by weekday', result.attention);\r\n * }\r\n * ```\r\n */\r\nexport const getByWeekday = async (filter: any, project: string, clientId: string, token: string) => {\r\n  // gender\r\n  const genderValues = new Map<string, any>();\r\n  const ageValues = new Map<string, any>();\r\n  const productDistributionValues = new Map<string, any>();\r\n  let i = 1;\r\n  Object.values(Day).filter(m => typeof m === 'string').forEach(m => {\r\n    genderValues.set((i).toString(), { name: m.toString(), M: 0, F: 0 });\r\n    ageValues.set((i).toString(), { name: m.toString(), r1: 0, r2: 0, r3: 0, r4: 0 });\r\n    productDistributionValues.set((i++).toString(), { name: m.toString() });\r\n  });\r\n  const gender = await multisplitBy('weekday', 'target_gender', genderValues, filter, project, clientId, token);\r\n  const age = await ageBy('weekday', ageValues, filter, project, clientId, token);\r\n  const f = { ...filter, _aggregate: 'avg', _aggregate_field: 'target_attention_time' };\r\n  const productDistribution = await multisplitBy('month', 'audience_id', productDistributionValues, f, project, clientId, token);\r\n  const main = await by(splitByWeekday, filter, project, clientId, token);\r\n  return { ...main, gender, age, productDistribution };\r\n}\r\n\r\n/**\r\n * Gets information grouped by hour.\r\n * @param filter Options to narrow down the result.\r\n * @param project Studio project.\r\n * @param clientId Studio client id.\r\n * @param token Studio token.\r\n * @returns Information grouped by hour (age, attention, dwell, gender, lift interactions, lift time, place interaction, place time, product distribution, traffic and views).\r\n * ``` typescript\r\n * // example\r\n * getByHour({}, 'broox-studio-development', clientId, token).then(result => {\r\n *   console.log('dwell by hour', result.dwell);\r\n * }\r\n * ```\r\n */\r\nexport const getByHour = async (filter: any, project: string, clientId: string, token: string) => {\r\n  // gender\r\n  const genderValues = new Map<string, any>();\r\n  const ageValues = new Map<string, any>();\r\n  const productDistributionValues = new Map<string, any>();\r\n  let i = 1;\r\n  for(let i = 0; i < 24; i++) {\r\n    const n = i.toString().padStart(2, '0');\r\n    genderValues.set((n).toString(), { name: n.toString(), M: 0, F: 0 });\r\n    ageValues.set((n).toString(), { name: n.toString(), r1: 0, r2: 0, r3: 0, r4: 0 });\r\n    productDistributionValues.set((n).toString(), { name: n.toString() });\r\n  }\r\n  const gender = await multisplitBy('hour', 'target_gender', genderValues, filter, project, clientId, token);\r\n  const age = await ageBy('hour', ageValues, filter, project, clientId, token);\r\n  const f = { ...filter, _aggregate: 'avg', _aggregate_field: 'target_attention_time' };\r\n  const productDistribution = await multisplitBy('hour', 'audience_id', productDistributionValues, f, project, clientId, token);\r\n  const main = await by(splitByHour, filter, project, clientId, token);\r\n  return { ...main, gender, age, productDistribution };\r\n}\r\n\r\n/**\r\n * Gets client information.\r\n * @param filter Options to narrow down the result.\r\n * @param project Studio project.\r\n * @param clientId Studio client id.\r\n * @param token Studio token.\r\n * @returns Client information.\r\n * ``` typescript\r\n * // example\r\n * getClient({}, 'broox-studio-development', clientId, token).then(result => {\r\n *   console.log('client', result);\r\n * }\r\n * ```\r\n */\r\nexport const getClient = async (project: string, clientId: string, token: string) => {\r\n  const result = await fetch(getUrl(project) + '/clientmeta/' + clientId, getOptions(token));\r\n  return result.json();\r\n}\r\n\r\n/**\r\n * Gets audiences.\r\n * @param filter Options to narrow down the result.\r\n * @param project Studio project.\r\n * @param clientId Studio client id.\r\n * @param token Studio token.\r\n * @returns Audiences.\r\n * ``` typescript\r\n * // example\r\n * getAudiences({}, 'broox-studio-development', clientId, token).then(result => {\r\n *   const audiences = [];\r\n *   for(const [key, value] of Object.entries(result)) {\r\n *     audiences.push({ id: key, name: value });\r\n *   }\r\n * }\r\n * ```\r\n */\r\nexport const getAudiences = async (filter: any, project: string, clientId: string, token: string) => {\r\n  return get('audiences', filter, project, clientId, token);\r\n}\r\n\r\n/**\r\n * Gets stores structure.\r\n * @param filter Options to narrow down the result .\r\n * @param project Studio project.\r\n * @param clientId Studio client id.\r\n * @param token Studio token.\r\n * @returns Stores with installations, campaigns and categories.\r\n * ``` typescript\r\n * // example\r\n * getAudiences({}, 'broox-studio-development', clientId, token).then(result => {\r\n *   const stores = [];\r\n *   for(const [key, value] of Object.entries(result)) {\r\n *     stores.push({ id: key, name: value });\r\n *   }\r\n * }\r\n * ```\r\n */\r\nexport const getCollapsed = async (filter: any, project: string, clientId: string, token: string) => {\r\n  return get('collapsed', filter, project, clientId, token);\r\n}\r\n\r\nconst by = async (split: (filter: any, project: string, clientId: string, token: string) => Promise<any>, filter: any, project: string, clientId: string, token: string) => {\r\n  // traffic\r\n  let f = { ... filter, ev_action: 'in', ev_category: Category.Profile };\r\n  const traffic = await split(f, project, clientId, token);\r\n  // views\r\n  f = { ... filter, is_view: true, ev_category: Category.Profile };\r\n  const views = await split(f, project, clientId, token);\r\n  // dwell\r\n  f = { ... filter, _aggregate: 'avg', _aggregate_field: 'target_dwell', ev_category: Category.Profile };\r\n  const dwell = await split(f, project, clientId, token);\r\n  // attention\r\n  f = { ... filter, _aggregate: 'avg', _aggregate_field: 'target_attention_time', ev_category: Category.Profile };\r\n  const attention = await split(f, project, clientId, token);\r\n  // lift interactions\r\n  f = { ... filter, ev_action: 'in', ev_category: Category.Sensor };\r\n  const liftInteractions = await split(f, project, clientId, token);\r\n  // lift time\r\n  f = { ... filter, _aggregate: 'avg', _aggregate_field: 'target_attention_time', ev_action: 'out', ev_category: Category.Sensor };\r\n  const liftTime = await split(f, project, clientId, token);\r\n  // place interactions\r\n  f = { ... filter, ev_action: 'in', ev_category: Category.Marker };\r\n  const placeInteractions = await split(f, project, clientId, token);\r\n  // place time\r\n  f = { ... filter, _aggregate: 'avg', _aggregate_field: 'target_attention_time', ev_action: 'out', ev_category: Category.Marker };\r\n  const placeTime = await split(f, project, clientId, token);\r\n  return { traffic, views, dwell, attention, liftInteractions, liftTime, placeInteractions, placeTime };\r\n}\r\n\r\nconst getUrl = (project: string) => {\r\n  if(project.indexOf('.') !== -1) {\r\n    return 'https://' + project;\r\n  }\r\n  else {\r\n    return 'https://' + project + '.web.app';\r\n  }\r\n}\r\n\r\nconst getOptions = (token: string) => {\r\n  return {\r\n    headers: {\r\n      Authorization: 'Bearer ' + token\r\n    }\r\n  }\r\n}\r\n\r\nconst get = async (report: string, filter: any, project: string, clientId: string, token: string) => {\r\n  let params: any[] = [];\r\n  for(const [key, value] of Object.entries(filter)) {\r\n    params.push(key + '=' + encodeURI(`${value}`));\r\n  }\r\n  // fetch report\r\n  const url = getUrl(project);\r\n  const result = await fetch(url + '/analytics/' + clientId + '/' + report + '?' + params.join('&'), getOptions(token));\r\n  return await result.json();\r\n}\r\n\r\nconst splitByYear = async (filter: any, project: string, clientId: string, token: string) => {\r\n  const result = await get('split', { ...filter, _split: 'year' }, project, clientId, token);\r\n  const sorted = result.split.sort((a: any, b: any) => (parseInt(a.key) > parseInt(b.key)) ? 1 : ((parseInt(b.key) > parseInt(a.key)) ? -1 : 0));\r\n  const data: number[] = [];\r\n  const labels: string[] = [];\r\n  for(let i = 0; i < sorted.length; i++) {\r\n    labels.push(sorted[i].key);\r\n    data.push(filter._aggregate === 'avg' ? sorted[i].average.value : sorted[i].doc_count);\r\n  }\r\n  return { data, labels };\r\n}\r\n\r\nconst splitByMonth = async (filter: any, project: string, clientId: string, token: string) => {\r\n  const values = new Map<string, any>();\r\n  let i = 1;\r\n  Object.values(Month).filter(m => typeof m === 'string').forEach(m => {\r\n    values.set((i++).toString(), { name: m.toString(), value: 0 });\r\n  });\r\n  return splitBy('month', values, filter, project, clientId, token);\r\n}\r\n\r\nconst splitByWeekday = async (filter: any, project: string, clientId: string, token: string) => {\r\n  const values = new Map<string, any>();\r\n  let i = 1;\r\n  Object.values(Day).filter(m => typeof m === 'string').forEach(m => {\r\n    values.set((i++).toString(), { name: m.toString(), value: 0 });\r\n  });\r\n  return await splitBy('weekday', values, filter, project, clientId, token);\r\n}\r\n\r\nconst splitByHour = async (filter: any, project: string, clientId: string, token: string) => {\r\n  const values = new Map<string, any>();\r\n  for(let i = 0; i < 24; i++) {\r\n    const n = i.toString().padStart(2, '0');\r\n    values.set(n, { name: n, value: 0 });\r\n  }\r\n  return await splitBy('hour', values, filter, project, clientId, token);\r\n}\r\n\r\nconst splitBy = async (name: string, values: Map<any, any>, filter: any, project: string, clientId: string, token: string) => {\r\n  const result = await get('split', { ...filter, _split: name }, project, clientId, token);\r\n  for(let i = 0; i < result.split.length; i++) {\r\n    const v = values.get(result.split[i].key);\r\n    v.value = filter._aggregate === 'avg' ? result.split[i].average.value : result.split[i].doc_count;\r\n  }\r\n  const data: any[] = [];\r\n  const labels: any[] = [];\r\n  for(const v of values.values()) {\r\n    data.push(v.value);\r\n    labels.push(v.name);\r\n  }\r\n  return { data, labels };\r\n}\r\n\r\nconst multisplitBy = async (firstSplit: string, secondSplit: string, values: Map<any, any>, filter: any, project: string, clientId: string, token: string) => {\r\n  const result = await get('multisplit', { ...filter, _split0: firstSplit, _split1: secondSplit }, project, clientId, token);\r\n  for(let i = 0; i < result.split.length; i++) {\r\n    const first = values.get(result.split[i].key[0]);\r\n    const second = result.split[i].key[1];\r\n    first[second] = filter._aggregate === 'avg' ? result.split[i].avg.value : result.split[i].doc_count;\r\n  }\r\n  const data = {};\r\n  const labels: any[] = [];\r\n  for(const v of values.values()) {\r\n    for(const prop in v) {\r\n      if(prop === 'name') {\r\n        labels.push(v.name);    \r\n      }\r\n      else {\r\n        !data[prop] && (data[prop] = []);\r\n        data[prop].push(v[prop]);\r\n      }\r\n    }\r\n  }\r\n  return { data, labels };\r\n}\r\n\r\nconst ageBy = async (name: string, values: Map<any, any>, filter: any, project: string, clientId: string, token: string) => {\r\n  const f = { ...filter, _field_term: name, _field_ranges: 'target_age', _range1: '0-20',_range1_key: 'r1', _range2: '21-40', _range2_key: 'r2', _range3: '41-60', _range3_key: 'r3', _range4: '61-99', _range4_key: 'r4' };\r\n  const result = await get('multisplit_range', f, project, clientId, token);\r\n  for(let i = 0; i < result.split.length; i++) {\r\n    const value = values.get(result.split[i].key);\r\n    value.r1 = result.split[i].split.buckets['r1'].doc_count;\r\n    value.r2 = result.split[i].split.buckets['r2'].doc_count;\r\n    value.r3 = result.split[i].split.buckets['r3'].doc_count;\r\n    value.r4 = result.split[i].split.buckets['r4'].doc_count;\r\n  }\r\n  const data: any[] = [[], [], [], []];\r\n  const labels: any[] = [];\r\n  for(const v of values.values()) {\r\n    data[0].push(v.r1);\r\n    data[1].push(v.r2);\r\n    data[2].push(v.r3);\r\n    data[3].push(v.r4);\r\n    labels.push(v.name);\r\n  }\r\n  return { data, labels };\r\n}","enum Category {\r\n  Sensor = 'sensor',\r\n  Profile = 'profile',\r\n  Marker = 'onevent'\r\n}\r\n\r\nexport { Category };","enum Day {\r\n  Monday,\r\n  Tuesday,\r\n  Wednesday,\r\n  Thursday,\r\n  Friday,\r\n  Saturday,\r\n  Sunday\r\n}\r\n\r\nexport { Day };","enum Month {\r\n  January,\r\n  February,\r\n  March,\r\n  April,\r\n  May,\r\n  June,\r\n  July,\r\n  August,\r\n  September,\r\n  October,\r\n  November,\r\n  December\r\n}\r\n\r\nexport { Month };"],"names":[],"version":3,"file":"broox.js.map"}