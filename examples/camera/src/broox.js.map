{"mappings":"SEmBgB,yCAAS,CAAC,KAAuB,EAAE,OAAiC,EAAE,gBAAwB,EAAE,iBAAyB,EAAE,YAAoB,EAAE,YAAoB,EAAE,MAAM,GAAG,KAAK,EAAE,CAAC;IACtM,yCAAW,CAAC,KAAK,EAAE,OAAO,EAAE,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC,WAAW,EAAE,gBAAgB,EAAE,iBAAiB,EAAE,YAAY,EAAE,YAAY,EAAE,MAAM;AAC1I,CAAC;SAuBe,yCAAW,CAAC,OAA0B,EAAE,OAAiC,EAAE,WAAmB,EAAE,YAAoB,EAAE,gBAAwB,EAAE,iBAAyB,EAAE,YAAoB,EAAE,YAAoB,EAAE,MAAM,GAAG,KAAK,EAAE,CAAC;IACtP,OAAO,CAAC,IAAI;IACZ,EAAa,AAAb,WAAa;IACb,KAAK,CAAC,eAAe,GAAG,gBAAgB,GAAG,WAAW;IACtD,KAAK,CAAC,aAAa,GAAG,iBAAiB,GAAG,YAAY;IACtD,GAAG,CAAC,MAAM,GAAG,CAAC;IACd,GAAG,CAAC,KAAK,GAAG,CAAC;IACb,GAAG,CAAC,UAAU,GAAG,CAAC;IAClB,GAAG,CAAC,SAAS,GAAG,CAAC;IACjB,EAAuE,AAAvE,qEAAuE;IACvE,EAAE,EAAC,aAAa,GAAG,eAAe,EAAE,CAAC;QACnC,MAAM,GAAG,YAAY;QACrB,KAAK,GAAG,gBAAgB,GAAG,aAAa;QACxC,UAAU,IAAI,WAAW,GAAG,KAAK,IAAI,CAAC;IACxC,CAAC,MACI,CAAC;QACJ,KAAK,GAAG,WAAW;QACnB,MAAM,GAAG,iBAAiB,GAAG,eAAe;QAC5C,SAAS,IAAI,YAAY,GAAG,MAAM,IAAI,CAAC;IACzC,CAAC;IACD,EAAE,EAAC,MAAM,EAAE,CAAC;QACV,OAAO,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC;QACnB,OAAO,CAAC,SAAS,CAAC,OAAO,EAAE,UAAU,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,GAAG,YAAY,EAAE,YAAY,GAAG,gBAAgB,EAAE,iBAAiB;IACpI,CAAC,MAEC,OAAO,CAAC,SAAS,CAAC,OAAO,EAAE,UAAU,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,YAAY,EAAE,YAAY,EAAE,gBAAgB,EAAE,iBAAiB;IAElI,OAAO,CAAC,OAAO;AACjB,CAAC;;;;UExEI,OAAO;IAAP,OAAO,CACV,CAAc,mBAAG,CAAkB;IADhC,OAAO,CAEV,CAAoB,yBAAG,CAAqC;GAFzD,6BAAO,KAAP,6BAAO;;IAKZ,wCAAuB,GAAR,6BAAO;;;SDKN,yCAAmB,GAAmB,CAAC;IACrD,MAAM,CAAC,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,MAAM,GAAK,CAAC;QACvC,SAAS,CAAC,YAAY,CAAC,gBAAgB,GACpC,IAAI,EAAC,OAAO,GAAI,CAAC;YAChB,KAAK,CAAC,MAAM,GAAG,OAAO,CAAC,GAAG,EAAC,CAAC,GAAI,CAAC;gBAC/B,MAAM,CAAC,CAAC;oBACN,EAAE,EAAE,CAAC,CAAC,QAAQ;oBACd,IAAI,EAAE,CAAC,CAAC,KAAK;gBACf,CAAC;YACH,CAAC;YACD,OAAO,CAAC,MAAM;QAChB,CAAC,EACA,KAAK,EAAC,KAAK,GAAI,CAAC;YACf,MAAM,CAAC,KAAK,CAAC,OAAO;QACtB,CAAC;IACL,CAAC;AACH,CAAC;SAae,yCAAW,CAAC,IAAY,EAAmB,CAAC;IAC1D,MAAM,CAAC,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,MAAM,GAAK,CAAC;QACvC,SAAS,CAAC,YAAY,CAAC,gBAAgB,GACpC,IAAI,EAAC,OAAO,GAAI,CAAC;YAChB,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,GAClC,EAAE,EAAC,OAAO,CAAC,CAAC,EAAE,KAAK,KAAK,IAAI,EAAE,CAAC;gBAC7B,OAAO,CAAC,OAAO,CAAC,CAAC,EAAE,QAAQ;gBAC3B,MAAM;YACR,CAAC;YAEH,MAAM,CAAC,wCAAO,CAAC,cAAc;QAC/B,CAAC,EACA,KAAK,EAAC,KAAK,GAAI,CAAC;YACf,MAAM,CAAC,KAAK,CAAC,OAAO;QACtB,CAAC;IACL,CAAC;AACH,CAAC;SAee,yCAAW,CAAC,QAAgB,EAAE,KAAa,EAAE,MAAc,EAAE,CAAC;IAC5E,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;QAAC,KAAK,EAAE,CAAC;YAAC,QAAQ,EAAE,QAAQ;YAAE,KAAK,EAAE,KAAK;YAAE,MAAM,EAAE,MAAM;QAAC,CAAC;IAAA,CAAC;AAC3G,CAAC;;;SEhEgB,yCAAW,CAAC,IAAU,EAAE,CAAC;IACxC,MAAM,CAAC,GAAG,CAAC,OAAO,EAAE,OAAO,GAAK,CAAC;QAC/B,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK;QACvB,KAAK,CAAC,MAAM,OAAS,CAAC;YACpB,GAAG,CAAC,eAAe,CAAC,KAAK,CAAC,GAAG;YAC7B,OAAO,CAAC,KAAK;QACf,CAAC;QACD,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,eAAe,CAAC,IAAI;IACtC,CAAC;AACH,CAAC;;;;MCJY,yCAAW;IAMtB,EAKG,AALH,iLAKG,AALH,EAKG,aACS,KAAa,EAAE,MAAc,EAAE,WAAmB,CAAE,CAAC;QAC/D,IAAI,CAAC,WAAW,GAAG,WAAW;QAC9B,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAQ;QAC7C,IAAI,CAAC,KAAK,IAAI,KAAK,GAAG,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,KAAK;QACnD,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK;QACzB,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,MAAM,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,GAAG,CAAC;QAC/D,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAI;QAC1C,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,CAAO;QAChC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM;IACnE,CAAC;IAED,EAeG,AAfH,qnBAeG,AAfH,EAeG,CACH,UAAU,CAAC,OAAY,EAAE,CAAS,EAAE,CAAS,EAAE,KAAa,EAAE,MAAc,EAAE,KAAa,EAAE,MAAe,EAAE,CAAC;QAC7G,KAAK,CAAC,gBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,KAAK;QAC/D,KAAK,CAAC,iBAAiB,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,WAAW,IAAI,KAAK;QAC7E,0DAAW,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,gBAAgB,EAAE,iBAAiB,EAAE,IAAI,CAAC,WAAW,GAAG,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,GAAG,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,MAAM;IACrL,CAAC;IAED,EAEG,AAFH,oCAEG,AAFH,EAEG,CACH,KAAK,GAAG,CAAC;QACP,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM;IACpE,CAAC;IAED,EASG,AATH,6PASG,AATH,EASG,CACH,GAAG,GAAkB,CAAC;QACpB,MAAM,CAAC,GAAG,CAAC,OAAO,EAAE,OAAO,GAAK,CAAC;YAC/B,IAAI,CAAC,MAAM,CAAC,MAAM,EAAC,IAAI,GAAI,OAAO,CAAC,IAAI;cAAG,CAAW,YAAE,CAAC;QAC1D,CAAC;IACH,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MClEU,yCAAQ;gBAeP,MAAoB,CAAE,CAAC;QACjC,IAAI,CAAC,MAAM,GAAG,MAAM;IACtB,CAAC;IAED,EAGG,AAHH,2EAGG,AAHH,EAGG,CACH,SAAS,CAAC,MAAmB,EAAE,CAAC;QAC9B,IAAI,CAAC,MAAM,GAAG,MAAM;IACtB,CAAC;IAED,EAEG,AAFH,8BAEG,AAFH,EAEG,CACH,KAAK,GAAG,CAAC;QACP,KAAK,CAAC,IAAI,GAAG,IAAI;QACjB,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,MAAM,GAAK,CAAC;YAC/C,IAAI,CAAC,OAAO,GAAG,OAAO;QACxB,CAAC;QACD,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC;QACb,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM;QAC7C,IAAI,CAAC,QAAQ,CAAC,eAAe,IAAG,CAAC,GAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI;;QACrD,IAAI,CAAC,QAAQ,CAAC,MAAM,OAAS,CAAC;YAC5B,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;gBAAC,IAAI,EAAE,CAAY;YAAC,CAAC;QACpD,CAAC;QACD,IAAI,CAAC,QAAQ,CAAC,KAAK;IACrB,CAAC;IAED,EAEG,AAFH,6BAEG,AAFH,EAEG,CACH,IAAI,GAAkB,CAAC;QACrB,IAAI,CAAC,QAAQ,CAAC,KAAK,KAAK,CAAW,cAAI,IAAI,CAAC,QAAQ,CAAC,IAAI;QACzD,MAAM,CAAC,IAAI,CAAC,OAAO;IACrB,CAAC;;;;;;;;;;;;;;UE3DS,yCAAW;IAAX,yCAAW,CACrB,CAAU,eAAG,CAAc;IADjB,yCAAW,CAErB,CAAW,gBAAG,CAAe;IAFnB,yCAAW,CAGrB,CAAW,gBAAG,CAAe;IAHnB,yCAAW,CAIrB,CAAU,eAAG,CAAa;IAJhB,yCAAW,CAKrB,CAAW,gBAAG,CAAc;IALlB,yCAAW,CAMrB,CAAe,oBAAG,CAAoB;IAN5B,yCAAW,CAOrB,CAAgB,qBAAG,CAAqB;IAP9B,yCAAW,CAQrB,CAAgB,qBAAG,CAAqB;GAR9B,yCAAW,KAAX,yCAAW;;;;MEDV,yCAAO;IAIlB,EAIG,AAJH,0HAIG,AAJH,EAIG,aACS,KAAe,EAAE,SAAiB,CAAE,CAAC;QAT5C,IA6BN,CA5BS,KAAK,GAAa,CAAC,CAAC;QADvB,IA6BN,CA3BS,SAAS,GAAW,CAAC;QAQ3B,IAAI,CAAC,KAAK,GAAG,KAAK;QAClB,IAAI,CAAC,SAAS,GAAG,SAAS;IAC5B,CAAC;IAED,EAGG,AAHH,0DAGG,AAHH,EAGG,CACH,QAAQ,GAAa,CAAC;QACpB,MAAM,CAAC,IAAI,CAAC,KAAK;IACnB,CAAC;IAED,EAGG,AAHH,0DAGG,AAHH,EAGG,CACH,YAAY,GAAW,CAAC;QACtB,MAAM,CAAC,IAAI,CAAC,SAAS;IACvB,CAAC;;;;;;;;;;;;;;;MDpBU,yCAAc;IAWzB,EAIG,AAJH,sPAIG,AAJH,EAIG,aACS,IAAY,EAAE,KAAa,CAAE,CAAC;QAhBrC,IAkJN,CA/IS,SAAS,GAAY,IAAI;QAH5B,IAkJN,CA9IS,QAAQ,GAAc,CAAC,CAAC;QAa9B,IAAI,CAAC,IAAI,GAAG,IAAI;QAChB,IAAI,CAAC,KAAK,GAAG,KAAK;QAClB,KAAK,CAAC,IAAI,GAAG,IAAI;QACjB,EAAoB,AAApB,kBAAoB;QACpB,MAAM,CAAC,gBAAgB,CAAC,CAAS,WAAE,KAAK,GAAI,CAAC;YAC3C,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,GACrC,EAAE,EAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,OAAO,KAAK,CAAY,aACvC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI;QAGjC,CAAC,EAAE,KAAK;IACV,CAAC;IAED,EAGG,AAHH,wFAGG,AAHH,EAGG,CACH,GAAG,CAAC,IAAW,EAAQ,CAAC;QACtB,EAAE,EAAC,IAAI,CAAC,SAAS,EAAE,CAAC;YAClB,EAAE,EAAC,IAAI,CAAC,CAAC,MAAM,CAAI,KACjB,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,gBAAgB;iBAE3C,EAAE,EAAC,IAAI,CAAC,CAAC,MAAM,CAAM,SAAI,IAAI,CAAC,CAAC,MAAM,CAAO,QAAE,CAAC;gBAClD,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC1B,EAAE,EAAC,KAAK,CAAC,MAAM,EAAE,CAAC;oBAChB,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC,0DAAO,CAAC,KAAK,EAAE,GAAG,CAAC,IAAI,GAAG,OAAO;oBACrD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO;oBAC1B,IAAI,CAAC,KAAK;gBACZ,CAAC;YACH,CAAC;QACH,CAAC;IACH,CAAC;IAED,EAGG,AAHH,4IAGG,AAHH,EAGG,CACH,UAAU,CAAC,QAAmB,EAAE,CAAC;QAC/B,IAAI,CAAC,gBAAgB,GAAG,QAAQ;IAClC,CAAC;IAED,EAGG,AAHH,yKAGG,AAHH,EAGG,CACH,aAAa,CAAC,QAAmB,EAAE,CAAC;QAClC,IAAI,CAAC,mBAAmB,GAAG,QAAQ;IACrC,CAAC;IAED,EAGG,AAHH,uKAGG,AAHH,EAGG,CACH,YAAY,CAAC,QAAmB,EAAE,CAAC;QACjC,IAAI,CAAC,kBAAkB,GAAG,QAAQ;IACpC,CAAC;IAED,EAGG,AAHH,yKAGG,AAHH,EAGG,CACH,aAAa,CAAC,QAAmB,EAAE,CAAC;QAClC,IAAI,CAAC,mBAAmB,GAAG,QAAQ;IACrC,CAAC;IAED,EAGG,AAHH,yKAGG,AAHH,EAGG,CACH,aAAa,CAAC,QAAmB,EAAE,CAAC;QAClC,IAAI,CAAC,mBAAmB,GAAG,QAAQ;IACrC,CAAC;IAED,EAEG,AAFH,gDAEG,AAFH,EAEG,CACK,KAAK,GAAS,CAAC;QACrB,EAAmB,AAAnB,iBAAmB;QACnB,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC;QAC1C,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS;QAC3C,KAAK,CAAC,gBAAgB,GAAG,WAAW,CAAC,QAAQ;QAC7C,EAAE,EAAC,gBAAgB,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YACjC,KAAK,CAAC,IAAI,GAAG,gBAAgB,CAAC,CAAC;YAC/B,EAAgE,AAAhE,8DAAgE;YAChE,EAAE,EAAC,IAAI,KAAK,0DAAW,CAAC,WAAW,IAAI,IAAI,KAAK,0DAAW,CAAC,gBAAgB,EAC1E,IAAI,CAAC,IAAI,CAAC,IAAI;iBAEX,EAAE,EAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;gBACjC,KAAK,CAAC,aAAa,GAAG,WAAW,CAAC,YAAY;gBAC9C,GAAG,CAAC,CAAC,GAAG,SAAS;gBACjB,GAAG,CAAC,OAAO,GAAY,IAAI;gBAC3B,EAAkD,AAAlD,gDAAkD;uBAC3C,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,QAAQ,GAAG,OAAO,CAAC,IAAI,KAAK,CAAC,CAAE,CAAC;oBAC7E,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;oBAC3B,EAAE,EAAC,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,YAAY,KAAK,IAAI,CAAC,IAAI,EAC5D,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAE7B,CAAC;gBACD,EAAE,EAAC,OAAO,EACR,IAAI,CAAC,IAAI,CAAC,IAAI;YAElB,CAAC;QACH,CAAC;IACH,CAAC;IAED,EAGG,AAHH,oGAGG,AAHH,EAGG,CACK,IAAI,CAAC,IAAY,EAAQ,CAAC;QAChC,OAAO,CAAC,GAAG,CAAC,CAAU,YAAG,IAAI,GAAG,CAAO;QACvC,IAAI,CAAC,SAAS,GAAG,KAAK;QACtB,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;QAClB,UAAU,KAAO,CAAC;YAChB,IAAI,CAAC,SAAS,GAAG,IAAI;QACvB,CAAC,EAAE,IAAI,CAAC,KAAK,GAAG,IAAI;QACpB,EAAE,EAAC,IAAI,KAAK,0DAAW,CAAC,WAAW,EACjC,IAAI,CAAC,mBAAmB,IAAI,IAAI,CAAC,mBAAmB;aAEjD,EAAE,EAAC,IAAI,KAAK,0DAAW,CAAC,UAAU,EACrC,IAAI,CAAC,kBAAkB,IAAI,IAAI,CAAC,kBAAkB;aAE/C,EAAE,EAAC,IAAI,KAAK,0DAAW,CAAC,WAAW,EACtC,IAAI,CAAC,mBAAmB,IAAI,IAAI,CAAC,mBAAmB;aAEjD,EAAE,EAAC,IAAI,KAAK,yCAAW,CAAC,gBAAgB,EAC3C,IAAI,CAAC,mBAAmB,IAAI,IAAI,CAAC;IAErC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MG1JU,yCAAiB;IAG5B,EAGG,AAHH,sDAGG,AAHH,EAGG,aACS,QAAa,CAAE,CAAC;QAC1B,IAAI,CAAC,QAAQ,GAAG,QAAQ;IAC1B,CAAC;IAED,EAIG,AAJH,qFAIG,AAJH,EAIG,CACF,KAAK,CAAC,WAAmB,EAAE,OAAY,EAAQ,CAAC;QAC/C,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO;IACxD,CAAC;IAED,EAGG,AAHH,sDAGG,AAHH,EAGG,CACH,IAAI,CAAC,WAAmB,EAAO,CAAC;QAC/B,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW;QACzD,MAAM,CAAC,OAAO;IACf,CAAC;;;;;;;;;;;;;;MC3BS,yCAAY;IACvB,EAIG,AAJH,qFAIG,AAJH,EAIG,CACH,KAAK,CAAC,WAAmB,EAAE,OAAY,EAAQ,CAAC;QAC9C,YAAY,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO;IAC1D,CAAC;IACD,EAIG,AAJH,qGAIG,AAJH,EAIG,CACH,IAAI,CAAC,WAAmB,EAAO,CAAC;QAC9B,KAAK,CAAC,OAAO,GAAG,YAAY,CAAC,OAAO,CAAC,WAAW;QAChD,EAAE,EAAC,OAAO,EACR,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO;QAE3B,MAAM,CAAC,IAAI;IACb,CAAC;;;;;;;;;;;;MCjBU,yCAAM;WACV,UAAU,GAAG,CAAC;QACnB,EAAa,AAAb,WAAa;QACb,MAAM,GAAG,MAAM,CAAC,QAAQ;IAC1B,CAAC;WAEM,WAAW,GAAG,CAAC;QACpB,EAAa,AAAb,WAAa;QACb,MAAM,CAAC,MAAM,CAAC,GAAG,IAAI,MAAM,CAAC,GAAG,CAAC,QAAQ;IAC1C,CAAC;WAEM,YAAY,GAAG,CAAC;QACrB,EAAa,AAAb,WAAa;QACb,MAAM,CAAC,MAAM,CAAC,GAAG,IAAI,MAAM,CAAC,GAAG,CAAC,KAAK;IACvC,CAAC;WAEM,aAAa,GAAG,CAAC;QACtB,EAAa,AAAb,WAAa;QACb,MAAM,CAAC,MAAM,CAAC,GAAG,IAAI,MAAM,CAAC,GAAG,CAAC,MAAM;IACxC,CAAC;WAEM,QAAQ,CAAC,OAAe,EAAE,IAAY,EAAE,CAAC;QAC9C,EAAY,AAAZ,UAAY;QACZ,MAAM,CAAC,GAAG,IAAI,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI;IACjD,CAAC;;;;;MHjBU,yCAAQ;IAInB,EAEG,AAFH,uDAEG,AAFH,EAEG,cACW,CAAC;QAPV,IAkFN,CAjFS,QAAQ,GAA4B,CAAC;QAAA,CAAC;QAO5C,EAAE,EAAC,0DAAM,CAAC,UAAU,IAClB,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,0DAAiB,CAAC,0DAAM,CAAC,WAAW;aAGvD,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,0DAAY;IAEnC,CAAC;IAED,EAcG,AAdH,yXAcG,AAdH,EAcG,CACH,QAAQ,CAAC,WAAmB,EAAE,GAAW,EAAE,KAAU,EAAE,CAAC;QACtD,EAAE,EAAC,WAAW,KAAK,CAAQ,SAAE,CAAC;YAC5B,OAAO,CAAC,KAAK,CAAC,wDAAO,CAAC,oBAAoB;YAC1C,MAAM;QACR,CAAC;QACD,EAAc,AAAd,YAAc;QACd,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW;QACzC,EAAE,GAAE,OAAO,EACT,OAAO,GAAG,CAAC;QAAA,CAAC;QAEd,OAAO,CAAC,GAAG,IAAI,KAAK;QACpB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,WAAW,EAAE,OAAO;IACzC,CAAC;IAED,EAWG,AAXH,0VAWG,AAXH,EAWG,CACH,QAAQ,CAAC,WAAmB,EAAE,GAAW,EAAO,CAAC;QAC/C,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW;QAC3C,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC,GAAG,IAAI,IAAI;IACtC,CAAC;IAED,EAIG,AAJH,iKAIG,AAJH,EAIG,CACK,UAAU,CAAC,WAAmB,EAAO,CAAC;QAC5C,EAA0B,AAA1B,wBAA0B;QAC1B,EAAE,EAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,GAC1B,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;aAGrB,EAA2B,AAA3B,yBAA2B;QAC3B,GAAG,CAAC,CAAC;YACH,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW;QACtC,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC;YACf,EAA6B,AAA7B,2BAA6B;YAC7B,MAAM,CAAC,IAAI;QACb,CAAC;IAEL,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UM7FE,iBAAiB;IAAjB,iBAAiB,CACpB,CAAM,WAAG,CAAa;IADnB,iBAAiB,CAEpB,CAAM,WAAG,CAAa;IAFnB,iBAAiB,CAGpB,CAAI,SAAG,CAAa;IAHjB,iBAAiB,CAIpB,CAAM,WAAG,CAAqB;IAJ3B,iBAAiB,CAKpB,CAAI,SAAG,CAAY;GALhB,uCAAiB,KAAjB,uCAAiB;;IAQtB,wCAAgC,GAAjB,uCAAiB;;;;SENhB,yCAAc,CAAC,OAAO,EAAE,IAAI,EAAE,mBAAmB,EAAE,CAAC;IAChE,GAAG,CAAC,IAAI,GAAG,CAAC;IAAA,CAAC;IACb,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC,EAAE,QAAQ;IAE1B,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC;IAElB,GAAG,CAAC,MAAM,GAAG,mBAAmB,CAAC,MAAM;IACvC,GAAG,CAAC,KAAK,GAAG,mBAAmB,CAAC,KAAK;IACrC,GAAG,CAAC,MAAM,GAAG,mBAAmB,CAAC,MAAM;IAEvC,IAAI,CAAC,SAAS,GAAG,CAAC;QACd,CAAC,EAAE,IAAI,CAAC,CAAC;QACT,CAAC,EAAE,IAAI,CAAC,CAAC;QACT,KAAK,EAAE,KAAK,GAAG,KAAK;QACpB,MAAM,EAAE,KAAK,GAAG,MAAM;IAC1B,CAAC;IAED,IAAI,CAAC,UAAU,GAAG,CAAC;QACf,CAAC,EAAE,IAAI,CAAC,CAAC;QACT,CAAC,EAAE,IAAI,CAAC,CAAC;QACT,KAAK,EAAE,KAAK,GAAG,KAAK;QACpB,MAAM,EAAE,KAAK,GAAG,MAAM;IAC1B,CAAC;IACD,IAAI,CAAC,KAAK,GAAG,KAAK;IAElB,EAAE,EAAC,yCAAmB,CAAC,IAAI,CAAC,SAAS,GAAE,CAAC;QACpC,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,KAAK,GAAG,MAAM,CAAC,CAAC;QACtD,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,MAAM,GAAG,MAAM,CAAC,CAAC;IAC3D,CAAC;IAED,EAAE,EAAC,yCAAmB,CAAC,IAAI,CAAC,UAAU,GAAE,CAAC;QACrC,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG,KAAK,GAAG,MAAM,CAAC,CAAC;QACxD,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG,MAAM,GAAG,MAAM,CAAC,CAAC;IAC7D,CAAC;IAED,MAAM,CAAC,IAAI;AACf,CAAC;SAEQ,yCAAmB,CAAC,KAAK,EAAC,CAAC;IAChC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,CAAC;AACvC,CAAC;SAIe,yCAAc,CAAC,OAAO,EAAE,IAAI,EAAE,mBAAmB,EAAE,CAAC;IAChE,KAAK,CAAC,QAAQ,GAAG,CAAC;QACd,IAAI,EAAE,IAAI;QACV,EAAE,EAAE,CAAE;QACN,OAAO,EAAE,CAAE;QACX,CAAC,EAAE,CAAC;QACJ,CAAC,EAAE,CAAC;QACJ,QAAQ,EAAE,CAAC;QACX,KAAK,EAAE,CAAC;QACR,MAAM,EAAE,CAAC;QACT,SAAS,EAAE,CAAC;QACZ,SAAS,EAAE,CAAC;QACZ,SAAS,EAAE,CAAC;IAChB,CAAC;IAED,GAAG,CAAC,MAAM,GAAG,mBAAmB,CAAC,MAAM;IACvC,GAAG,CAAC,KAAK,GAAG,mBAAmB,CAAC,KAAK;IACrC,GAAG,CAAC,MAAM,GAAG,mBAAmB,CAAC,MAAM;IAEvC,GAAG,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;IAAA,CAAC,EAAE,QAAQ;IACzC,QAAQ,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC,EAAE,QAAQ;IAE9B,MAAM,CAAC,OAAO;QACV,IAAI,CAAC,wCAAiB,CAAC,IAAI;YACvB,EAAE,GAAE,yCAAmB,CAAC,IAAI,EAAE,EAAE,GAAG,MAAM,CAAC,IAAI;YAC9C,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;YACnB,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;YACnB,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC;YAC1B,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC;YACvB,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC;YACxB,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC;YAC3B,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC;YAC3B,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE;YAC5B,KAAK;QACT,IAAI,CAAC,wCAAiB,CAAC,MAAM;YACzB,EAAE,GAAE,yCAAmB,CAAC,IAAI,EAAE,EAAE,GAAG,MAAM,CAAC,IAAI;YAC9C,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC;YACzB,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;YACnB,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;YACnB,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC;YAC1B,KAAK;QACT,IAAI,CAAC,wCAAiB,CAAC,MAAM;YACzB,EAAE,GAAE,yCAAmB,CAAC,IAAI,EAAE,CAAC,GAAG,MAAM,CAAC,IAAI;YAC7C,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;YACnB,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;YACnB,QAAQ,CAAC,KAAK,GAAG,EAAE,GAAG,KAAK;YAC3B,QAAQ,CAAC,MAAM,GAAG,QAAQ,CAAC,KAAK;YACjC,KAAK;QACR,IAAI,CAAC,wCAAiB,CAAC,MAAM;YACzB,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC;YACzB,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;YACnB,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;YACnB,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC;YAC1B,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC;YACvB,KAAK;;YAEL,OAAO,CAAC,KAAK,EAAE,+BAA+B,EAAE,OAAO;YACvD,KAAK;;IAGb,QAAQ,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,GAAG,KAAK,GAAG,MAAM,CAAC,CAAC;IAC1C,QAAQ,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,GAAG,MAAM,GAAG,MAAM,CAAC,CAAC;IAC3C,QAAQ,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,GAAG,KAAK;IACvC,QAAQ,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,GAAG,MAAM;IAE1C,MAAM,CAAC,QAAQ;AACnB,CAAC;SAEQ,yCAAmB,CAAC,IAAI,EAAE,MAAM,EAAC,CAAC;IACvC,EAAE,EAAC,IAAI,CAAC,MAAM,IAAI,MAAM,EAAC,CAAC;QACtB,OAAO,CAAC,KAAK,CAAC,CAAiD,mDAAE,MAAM,GAAG,CAAkB,oBAAE,IAAI,CAAC,MAAM;QACzG,MAAM,CAAC,KAAK;IAChB,CAAC;IACD,MAAM,CAAC,IAAI;AACf,CAAC;;;SCxHQ,+BAAS,CAAC,EAAE,EAAE,OAAO,GAAG,CAAE,GAAC,CAAC;IACjC,IAAI,CAAC,EAAE,GAAG,EAAE;IACZ,IAAI,CAAC,OAAO,GAAG,OAAO;IAEtB,IAAI,CAAC,MAAM,IAAI,IAAI,GAAK,CAAC;QACrB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC;QACxC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC;QAC3C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,CAAC;QACjD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC;QAEpD,EAAE,GAAE,IAAI,CAAC,SAAS,KAAK,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,EAAC,CAAC;YAC3E,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;YAChC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;QACpC,CAAC,MACG,CAAC;YACD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC;YACpD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC;QACxD,CAAC;QAED,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;QACf,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;IACnB,CAAC;AACL,CAAC;IAED,wCAAyB,GAAV,+BAAS;;;SExBf,uCAAiB,CAAC,MAAM,GAAG,MAAM,EAAE,CAAC;IACzC,GAAG,CAAC,IAAI,GAAG,IAAI;IACf,GAAG,CAAC,iBAAiB,GAAG,GAAG,CAAC,GAAG,GAAI,CAAsB,AAAtB,EAAsB,AAAtB,oBAAsB;IAEzD,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,GAAG;IAC1B,IAAI,CAAC,MAAM,GAAG,MAAM;IAEpB,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,UAAU,EAAE,UAAU,EAAE,YAAY,EAAE,QAAQ,EAAE,oBAAoB,GAAG,IAAI,EAAE,CAAC;QACjG,GAAG,CAAC,YAAY,GAAG,UAAU,CAAC,GAAG,EAAC,IAAI,GAAI,CAAC;YACvC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,oBAAoB;QAC9C,CAAC;QAED,GAAG,CAAC,YAAY,GAAG,UAAU,CAAC,GAAG,EAAC,IAAI,GAAI,CAAC;YACvC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,oBAAoB;QAC9C,CAAC;QAED,GAAG,CAAC,cAAc,GAAG,YAAY,CAAC,GAAG,EAAC,IAAI,GAAI,CAAC;YAC3C,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,oBAAoB;QAC9C,CAAC;QAED,GAAG,CAAC,UAAU,GAAG,QAAQ,CAAC,GAAG,EAAC,IAAI,GAAI,CAAC;YACnC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,oBAAoB;QAC9C,CAAC;QAED,GAAG,EAAE,GAAG,CAAC,KAAI,IAAI,YAAY,CACzB,iBAAiB,CAAC,MAAM,CAAC,KAAI,CAAC,EAAE,EAAE,oBAAoB;QAG1D,MAAM,CAAC,CAAC;YACJ,KAAK,EAAE,YAAY;YACnB,KAAK,EAAE,YAAY;YACnB,OAAO,EAAE,cAAc;YACvB,GAAG,EAAE,UAAU;QACnB,CAAC;IACL,CAAC;aAEQ,QAAQ,CAAC,IAAI,EAAE,oBAAoB,EAAE,CAAC;QAC3C,GAAG,CAAC,EAAE;QAEN,EAAE,GAAE,iBAAiB,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC;YACjC,EAAE,GAAG,eAAe;YACpB,iBAAiB,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE;QACrC,CAAC,MAEG,EAAE,GAAG,iBAAiB,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;QAGtC,GAAG,CAAC,eAAe,GAAG,oBAAoB,GAAG,oBAAoB,CAAC,IAAI,IAAI,CAAC;QAAA,CAAC;QAC5E,GAAG,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;YAC5B,UAAU,EAAE,EAAE;YACd,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,KAAK,EAAE,IAAI,CAAC,CAAC;YACb,KAAK,EAAE,IAAI,CAAC,CAAC;YACb,OAAO,EAAE,IAAI,CAAC,CAAC;YACf,OAAO,EAAE,IAAI,CAAC,CAAC;YACf,OAAO,EAAE,IAAI,CAAC,CAAC;YACf,OAAO,EAAE,IAAI,CAAC,CAAC;QACnB,CAAC,EAAE,eAAe;QAElB,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,UAAU;IAC/B,CAAC;aAEQ,eAAe,GAAG,CAAC;QACxB,MAAM,CAAC,IAAI,CAAC,GAAG,KAAK,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,KAAK,IAAI;IACvD,CAAC;AAEL,CAAC;IAGD,wCAAiC,GAAlB,uCAAiB;;;SDnEvB,4CAAsB,CAAC,WAAW,EAAE,CAAC;IAC1C,GAAG,CAAC,IAAI,GAAG,IAAI;IACf,GAAG,CAAC,UAAU,GAAG,GAAG,CAAC,wCAAiB,CAAC,WAAW;IAElD,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC,GAAG;IAE5B,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC;QACpC,UAAU,CAAC,MAAM,GAAG,MAAM;IAC9B,CAAC;IAED,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,QAAQ,EAAE,CAAC;QAC9B,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC;QACd,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC;QACd,GAAG,CAAC,OAAO,GAAG,CAAC,CAAC;QAChB,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;QAEZ,GAAG,EAAC,GAAG,EAAE,EAAE,EAAE,IAAI,KAAK,QAAQ,CAAE,CAAC;YAE7B,EAAE,GAAE,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC;gBAC7B,KAAK,CAAC,IAAI,CAAC,IAAI;gBACf,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI;YACnC,CAAC,MAEG,KAAK,CAAC,IAAI,CAAC,IAAI;YAEnB,GAAG,CAAC,IAAI,CAAC,IAAI;QACjB,CAAC;QAED,EAA2B,AAA3B,yBAA2B;QAC3B,GAAG,EAAC,GAAG,EAAE,GAAE,EAAE,KAAI,KAAK,IAAI,CAAC,aAAa,CACpC,EAAE,GAAE,QAAQ,CAAC,GAAG,CAAC,GAAE,GACf,EAAc,AAAd,YAAc;QACd,OAAO,CAAC,IAAI,CAAC,KAAI;QAIzB,GAAG,EAAE,GAAG,CAAC,KAAI,IAAI,OAAO,CACpB,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,KAAI,CAAC,EAAE;QAGrC,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,EAAE,oBAAoB;IAC7E,CAAC;aAEQ,oBAAoB,CAAC,IAAI,EAAE,CAAC;QACjC,MAAM,CAAC,CAAC;YACJ,OAAO,EAAE,IAAI,CAAC,KAAK;YACnB,OAAO,EAAE,IAAI,CAAC,MAAM;YACpB,aAAa,EAAE,IAAI,CAAC,QAAQ;QAChC,CAAC;IACL,CAAC;AACL,CAAC;IAED,wCAAsC,GAAvB,4CAAsB;;;SHlD5B,8CAAwB,CAAC,WAAW,EAAE,OAAO,EAAE,SAAS,EAAE,CAAC;IAChE,GAAG,CAAC,IAAI,GAAG,IAAI;IACf,GAAG,CAAC,SAAS,GAAG,yCAAsB;IACtC,GAAG,CAAC,iBAAiB,GAAG,GAAG,CAAC,wCAAsB,CAAC,WAAW;IAE9D,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,GAAG;IAE1B,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC;QACpC,iBAAiB,CAAC,cAAc,CAAC,MAAM;IAC3C,CAAC;IAED,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,OAAO,EAAE,IAAI,EAAE,mBAAmB,EAAE,CAAC;QAC3D,GAAG,CAAC,QAAQ,GAAG,SAAS,CAAC,OAAO,EAAE,IAAI,EAAE,mBAAmB;QAE3D,GAAG,CAAC,EAAE,GAAG,QAAQ,CAAC,EAAE;QACpB,EAAE,GAAE,EAAE,EAAE,CAAC;YACL,OAAO,CAAC,KAAK,CAAC,CAA2C;YACzD,MAAM;QACV,CAAC;QAED,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC;YAC5B,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,wCAAS,CAAC,EAAE,EAAE,QAAQ,CAAC,OAAO;YAC7C,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI;YAC7B,IAAI,CAAC,MAAM,CAAC,QAAQ;YACpB,OAAO,CAAC,EAAE;QACd,CAAC,MACG,CAAC;YACD,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE;YAClC,IAAI,CAAC,MAAM,CAAC,QAAQ;QACxB,CAAC;IACL,CAAC;IAED,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,EAAE,EAAE,CAAC;QAC5B,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE;QAC1B,SAAS,CAAC,EAAE;IAChB,CAAC;IAGD,IAAI,CAAC,aAAa,GAAG,QAAQ,GAAG,CAAC;QAC7B,MAAM,CAAC,iBAAiB,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW;IACpD,CAAC;AAGL,CAAC;IAED,wCAAwC,GAAzB,8CAAwB;;;;SMjD9B,+BAAS,CAAC,EAAE,EAAE,CAAC;IACpB,IAAI,CAAC,EAAE,GAAG,EAAE;IACZ,IAAI,CAAC,SAAS,GAAG,CAAC;QACd,EAAE,EAAE,EAAE,GAAG,CAAY;QACrB,CAAC,EAAE,EAAE;QACL,CAAC,EAAE,EAAE;IACT,CAAC;IACD,IAAI,CAAC,UAAU,GAAG,CAAC;QACf,EAAE,EAAE,EAAE,GAAG,CAAa;QACtB,CAAC,EAAE,EAAE;QACL,CAAC,EAAE,EAAE;IACT,CAAC;IAED,IAAI,CAAC,KAAK,GAAG,EAAI;IAEjB,IAAI,CAAC,MAAM,IAAI,IAAI,GAAK,CAAC;QACrB,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;QACnC,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;QACnC,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK;QAC3C,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM;QAE7C,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;QACrC,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;QACrC,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK;QAC7C,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM;QAE/C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK;IAC3B,CAAC;IAED,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC;QAC/B,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC;IACrC,CAAC;IAED,IAAI,CAAC,UAAU,GAAG,QAAQ,GAAG,CAAC;QAC1B,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC;QACd,EAAE,EAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,GAC9B,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS;QAE7B,EAAE,EAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,GAC/B,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU;QAG9B,MAAM,CAAC,KAAK;IAChB,CAAC;AACL,CAAC;IAED,wCAAyB,GAAV,+BAAS;;;;SC5Cf,4CAAsB,CAAC,WAAW,EAAE,CAAC;IAC1C,GAAG,CAAC,IAAI,GAAG,IAAI;IACf,GAAG,CAAC,UAAU,GAAG,GAAG,CAAC,wCAAiB,CAAC,WAAW;IAElD,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC,GAAG;IAE5B,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC;QACrC,UAAU,CAAC,MAAM,GAAG,MAAM;IAC7B,CAAC;IAED,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,QAAQ,EAAE,CAAC;QAC9B,GAAG,CAAC,QAAQ,GAAG,GAAG,CAAC,GAAG;QAEtB,GAAG,CAAC,UAAU,GAAG,CAAC,CAAC;QACnB,GAAG,CAAC,UAAU,GAAG,CAAC,CAAC;QACnB,GAAG,CAAC,YAAY,GAAG,CAAC,CAAC;QACrB,GAAG,CAAC,QAAQ,GAAG,CAAC,CAAC;QAEjB,GAAG,EAAC,GAAG,EAAE,EAAE,EAAE,IAAI,KAAK,QAAQ,CAAE,CAAC;YAC7B,GAAG,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU;YAEhC,GAAG,EAAC,GAAG,CAAC,IAAI,IAAI,UAAU,CAAE,CAAC;gBACzB,EAAE,GAAE,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC;oBAClC,UAAU,CAAC,IAAI,CAAC,IAAI;oBACpB,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI;gBACxC,CAAC,MAEG,UAAU,CAAC,IAAI,CAAC,IAAI;gBAGxB,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;gBACpB,QAAQ,CAAC,IAAI,CAAC,IAAI;YACtB,CAAC;QACL,CAAC;QAED,EAA2B,AAA3B,yBAA2B;QAC3B,GAAG,EAAC,GAAG,EAAE,GAAE,EAAE,IAAI,KAAK,IAAI,CAAC,aAAa,CACpC,EAAE,GAAE,QAAQ,CAAC,GAAG,CAAC,GAAE,GACf,EAAc,AAAd,YAAc;QACd,YAAY,CAAC,IAAI,CAAC,IAAI;QAI9B,GAAG,EAAE,GAAG,CAAC,KAAI,IAAI,YAAY,CACzB,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,KAAI,CAAC,EAAE;QAGrC,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,UAAU,EAAE,UAAU,EAAE,YAAY,EAAE,QAAQ;IAC3E,CAAC;AACL,CAAC;IAED,wCAAsC,GAAvB,4CAAsB;;;SFjD5B,8CAAwB,CAAC,WAAW,EAAE,OAAO,EAAE,SAAS,EAAE,CAAC;IAChE,GAAG,CAAC,IAAI,GAAG,IAAI;IACf,GAAG,CAAC,SAAS,GAAG,yCAAsB;IACtC,GAAG,CAAC,iBAAiB,GAAG,GAAG,CAAC,wCAAsB,CAAC,WAAW;IAE9D,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,GAAG;IAE1B,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC;QACpC,iBAAiB,CAAC,cAAc,CAAC,MAAM;IAC3C,CAAC;IAED,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,OAAO,EAAE,IAAI,EAAE,mBAAmB,EAAE,CAAC;QAC3D,GAAG,CAAC,QAAQ,GAAG,SAAS,CAAC,OAAO,EAAE,IAAI,EAAE,mBAAmB;QAE3D,GAAG,CAAC,EAAE,GAAG,QAAQ,CAAC,EAAE;QACpB,EAAE,GAAE,EAAE,EAAE,CAAC;YACL,OAAO,CAAC,KAAK,CAAC,CAA2C;YACzD,MAAM;QACV,CAAC;QAED,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC;YAC5B,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,wCAAS,CAAC,EAAE;YAC3B,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI;YAC7B,IAAI,CAAC,MAAM,CAAC,QAAQ;YACpB,OAAO,CAAC,EAAE;QACd,CAAC,MACG,CAAC;YACD,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE;YAClC,IAAI,CAAC,MAAM,CAAC,QAAQ;QACxB,CAAC;IACL,CAAC;IAED,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,EAAE,EAAE,CAAC;QAC5B,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE;QAC1B,SAAS,CAAC,EAAE;IAChB,CAAC;IAGD,IAAI,CAAC,aAAa,GAAG,QAAQ,GAAG,CAAC;QAC7B,MAAM,CAAC,iBAAiB,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW;IACpD,CAAC;AAGL,CAAC;IAED,wCAAwC,GAAzB,8CAAwB;;;SP7C9B,+BAAS,CAAC,kBAAiB,EAAE,CAAC;IACnC,GAAG,CAAC,IAAI,GAAG,IAAI;IACf,GAAG,CAAC,cAAc;IAElB,IAAI,CAAC,aAAa,GAAG,IAAI;IACzB,IAAI,CAAC,OAAO,GAAG,IAAI;IACnB,IAAI,CAAC,SAAS,GAAG,IAAI;IAErB,GAAG,CAAC,eAAe;IACnB,GAAG,CAAC,WAAW,GAAG,MAAM;IACxB,GAAG,CAAC,kBAAkB,GAAG,IAAI;IAE7B,GAAG,CAAC,mBAAmB,GAAG,CAAC;QACvB,KAAK,EAAE,MAAM,CAAC,UAAU;QACxB,MAAM,EAAE,MAAM,CAAC,WAAW;QAC1B,MAAM,EAAE,CAAC;YAAA,CAAC,EAAE,CAAC;YAAE,CAAC,EAAE,CAAC;QAAA,CAAC;IACxB,CAAC;IAED,IAAI,CAAC,kBAAiB;IAEtB,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC;QACpC,WAAW,GAAG,MAAM;QACpB,EAAE,GAAE,eAAe,EAAE,MAAM;QAC3B,eAAe,CAAC,cAAc,CAAC,MAAM;IACzC,CAAC;IAED,IAAI,CAAC,qBAAqB,GAAG,QAAQ,CAAC,SAAS,EAAE,CAAC;QAC9C,kBAAkB,GAAG,SAAS;IAClC,CAAC;IAED,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC,iBAAiB,EAAE,CAAC;QAClD,EAAE,EAAC,cAAc,KAAK,iBAAiB,EAAG,MAAM;QAEhD,EAAE,GAAE,iBAAiB,CAAC,QAAQ,CAAC,CAAQ,UAAG,CAAC;YACvC,OAAO,CAAC,GAAG,IAAI,iBAAiB,CAAC,sBAAsB;YACvD,MAAM;QACV,CAAC;QAED,cAAc,GAAG,iBAAiB;QAElC,MAAM,CAAC,cAAc;YACjB,IAAI,CAAC,wCAAiB,CAAC,IAAI;gBACvB,eAAe,GAAG,GAAG,CAAC,wCAAwB,CAAC,WAAW,EAAE,WAAW,EAAE,aAAa;gBACtF,KAAK;;gBAEL,eAAe,GAAG,GAAG,CAAC,wCAAwB,CAAC,WAAW,EAAE,WAAW,EAAE,aAAa;;IAElG,CAAC;IAED,IAAI,CAAC,sBAAsB,GAAG,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC;QACzD,mBAAmB,CAAC,KAAK,GAAG,KAAK;QACjC,mBAAmB,CAAC,MAAM,GAAG,MAAM;QACnC,mBAAmB,CAAC,MAAM,GAAG,CAAC;eAAA,CAAC;eAAE,CAAC;QAAA,CAAC;IACvC,CAAC;IAED,IAAI,CAAC,iBAAiB,GAAG,QAAQ,GAAG,CAAC;QACjC,MAAM,CAAC,cAAc;IACzB,CAAC;IAED,IAAI,CAAC,cAAc,GAAG,QAAQ,GAAG,CAAC;QAC9B,EAAE,GAAE,eAAe,EACf,MAAM,CAAC,GAAG,CAAC,GAAG;QAElB,MAAM,CAAC,eAAe,CAAC,WAAW;IACtC,CAAC;IAED,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,IAAI,EAAC,CAAC;QAE/B,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC;YACf,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,EAAE,IAAI;YACvB,EAAE,EAAC,IAAI,IAAI,SAAS,EAAE,QAAQ;YAC9B,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC,EAAE,OAAO;YAE7B,EAAE,EAAC,OAAO,KAAK,cAAc,EACzB,IAAI,CAAC,iBAAiB,CAAC,OAAO;iBAE7B,EAAE,EAAC,OAAO,KAAK,cAAc,EAAG,QAAQ;YAE7C,EAAE,GAAE,eAAe,EAAG,MAAM;YAE5B,MAAM,CAAC,IAAI,CAAC,CAAC;gBACT,IAAI,CAAC,CAAM;oBACP,EAAE,EAAC,IAAI,CAAC,MAAM,IAAI,CAAC,EAAG,MAAM;oBAC5B,UAAU,CAAC,IAAI,CAAC,CAAC;oBACjB,KAAK;gBAET,IAAI,CAAC,CAAK;oBACN,eAAe,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,EAAE,mBAAmB;oBAC5D,KAAK;gBAET,IAAI,CAAC,CAAO;oBACR,WAAW,CAAC,IAAI;oBAChB,KAAK;;oBAET,KAAK;;QAEb,CAAC;QAED,MAAM,CAAC,cAAc;IACzB,CAAC;IAED,IAAI,CAAC,aAAa,GAAG,QAAQ,GAAG,CAAC;QAC7B,EAAE,GAAE,eAAe,KAAK,kBAAkB,EAAE,MAAM,CAAC,IAAI;QACvD,MAAM,CAAC,eAAe,CAAC,aAAa;IACxC,CAAC;IAED,EAAE;IACF,EAAO,AAAP,KAAO;IACP,EAAG,AAAH,CAAG;aACM,UAAU,CAAC,IAAI,EAAC,CAAC;QACtB,EAAE,EAAC,IAAI,CAAC,aAAa,IAAI,IAAI,EAAE,MAAM;QACrC,IAAI,CAAC,aAAa,CAAC,IAAI;IAC3B,CAAC;IAED,EAAE;IACF,EAAQ,AAAR,MAAQ;IACR,EAAE;aAEO,WAAW,CAAC,QAAQ,EAAC,CAAC;QAC3B,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC;QAEpB,GAAG,EAAC,GAAG,EAAE,EAAE,EAAE,IAAI,KAAK,eAAe,CAAC,WAAW,CAAE,CAAC;YAChD,GAAG,CAAC,OAAO,GAAG,KAAK;YACnB,GAAG,EAAC,GAAG,CAAC,SAAS,IAAI,QAAQ,CAAC,CAAC;gBAC3B,OAAO,GAAG,SAAS,IAAI,EAAE;gBACzB,EAAE,EAAC,OAAO,EACN,KAAK;YAEb,CAAC;YAED,EAAE,GAAE,OAAO,EAAE,CAAC;gBACV,OAAO,CAAC,GAAG,IAAI,EAAE,CAAC,oBAAoB,EAAE,QAAQ,CAAC,aAAa;gBAC9D,WAAW,CAAC,IAAI,CAAC,EAAE;YACvB,CAAC;QACL,CAAC;QAED,GAAG,EAAC,GAAG,CAAC,GAAE,IAAI,WAAW,CACrB,eAAe,CAAC,UAAU,CAAC,GAAE;IAErC,CAAC;aAEQ,WAAW,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAC,CAAC;QAC3B,EAAE,EAAC,IAAI,CAAC,OAAO,IAAI,IAAI,EAAE,MAAM;QAC/B,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC;IACzB,CAAC;aAEQ,aAAa,CAAC,EAAE,EAAC,CAAC;QACvB,EAAE,EAAC,IAAI,CAAC,SAAS,IAAI,IAAI,EAAE,MAAM;QACjC,IAAI,CAAC,SAAS,CAAC,EAAE;IACrB,CAAC;aAGQ,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC9B,EAA4C,AAA5C,0CAA4C;IAChD,CAAC;AAGL,CAAC;IAED,wCAAyB,GAAV,+BAAS;;;MDzJX,yCAAK;IAMhB,EAEG,AAFH,yCAEG,AAFH,EAEG,cACW,CAAC;QATV,IAwMN,CAvMS,cAAc,GAAG,IAAI;QADxB,IAwMN,CAtMS,iBAAiB,GAAG,GAAG,CAAC,yDAAS,CAAC,IAAI;QAFzC,IAwMN,CArMS,WAAW,GAAG,GAAG,CAAC,GAAG;QAHxB,IAwMN,CApMS,WAAW,GAAG,MAAM;QAM1B,MAAM,CAAC,gBAAgB,CAAC,CAAS,UAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,GAAG,KAAK;QACnE,MAAM,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI;IAClD,CAAC;IAED,EAGG,AAHH,2DAGG,AAHH,EAGG,CACH,cAAc,CAAC,MAAM,EAAE,CAAC;QACtB,EAAE,EAAC,MAAM,EAAE,CAAC;YACV,IAAI,CAAC,WAAW,GAAG,MAAM;YACzB,IAAI,CAAC,eAAe,EAAC,UAAU,GAAI,CAAC;gBAClC,UAAU,CAAC,cAAc,CAAC,MAAM;YAClC,CAAC;QACH,CAAC;IACH,CAAC;IAED,EAIG,AAJH,2FAIG,AAJH,EAIG,CACH,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,iBAAiB,GAAG,IAAI,EAAE,CAAC;QAC/C,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,GAAG;QAC1B,IAAI,CAAC,cAAc,GAAG,IAAI;QAC1B,IAAI,CAAC,iBAAiB,GAAG,IAAI;QAE7B,GAAG,EAAC,GAAG,CAAC,KAAK,IAAI,MAAM,CAAE,CAAC;YACxB,GAAG,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO;YAC3B,EAAE,GAAE,OAAO,EACT,QAAQ;YAEV,GAAG,CAAC,UAAU,GAAG,GAAG,CAAC,yDAAS,CAAC,OAAO;YACtC,EAAE,EAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,OAAO,GAE7B,QAAQ;YAEV,EAAE,GAAE,IAAI,CAAC,cAAc,EACrB,IAAI,CAAC,cAAc,GAAG,OAAO;YAE/B,EAAE,EAAC,KAAK,CAAC,WAAW,IAAI,IAAI,EAC1B,UAAU,CAAC,qBAAqB,CAAC,KAAK,CAAC,WAAW;YAEpD,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,OAAO,EAAE,UAAU;QAC1C,CAAC;QACD,IAAI,CAAC,cAAc,CAAC,iBAAiB,GAAG,iBAAiB,GAAG,IAAI,CAAC,WAAW;IAC9E,CAAC;IAED,EAMG,AANH,kIAMG,AANH,EAMG,CACH,sBAAsB,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC;QAC3C,IAAI,CAAC,eAAe,EAAC,UAAU,GAAI,CAAC;YAClC,UAAU,CAAC,sBAAsB,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM;QACvD,CAAC;IACH,CAAC;IAED,EAIG,AAJH,+IAIG,AAJH,EAIG,CACH,qBAAqB,CAAC,SAAS,EAAE,OAAO,GAAG,IAAI,EAAE,CAAC;QAChD,GAAG,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO;QAC3C,EAAE,EAAC,UAAU,EACX,UAAU,CAAC,qBAAqB,CAAC,SAAS;IAE9C,CAAC;IAED,EAIG,AAJH,sFAIG,AAJH,EAIG,CACH,aAAa,CAAC,OAAO,GAAG,IAAI,EAAE,CAAC;QAC7B,EAAE,GAAE,OAAO,IAAI,IAAI,CAAC,iBAAiB,EACnC,MAAM,CAAC,IAAI,CAAC,iBAAiB;aAE1B,EAAE,GAAE,OAAO,IAAI,IAAI,CAAC,cAAc,EACrC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc;aAE5C,EAAE,EAAC,OAAO,EACb,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,OAAO;QAErC,MAAM,CAAC,IAAI;IACb,CAAC;IAED,EAIG,AAJH,0FAIG,AAJH,EAIG,CACH,cAAc,CAAC,OAAO,GAAG,IAAI,EAAE,CAAC;QAC9B,GAAG,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO;QAC3C,EAAE,GAAE,UAAU,EACZ,MAAM,CAAC,GAAG,CAAC,GAAG;QAEhB,MAAM,CAAC,UAAU,CAAC,cAAc;IAClC,CAAC;IAEO,SAAS,CAAC,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI;IAC5B,CAAC;IAEO,YAAY,CAAC,IAAI,EAAC,CAAC;QACzB,IAAI,CAAC,eAAe,EAAC,UAAU,GAAI,CAAC;YAClC,UAAU,CAAC,YAAY,CAAC,IAAI;QAC9B,CAAC;QACD,EAAE,EAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC;YAC1B,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,iBAAiB,CAAC,iBAAiB;YACxD,EAAE,EAAC,OAAO,EAAE,CAAC;gBACX,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,iBAAiB;gBACpD,IAAI,CAAC,iBAAiB,GAAG,IAAI;gBAC7B,EAAE,GAAE,IAAI,CAAC,cAAc,EACrB,IAAI,CAAC,cAAc,GAAG,OAAO;YAEjC,CAAC;QACH,CAAC;IACH,CAAC;IAEO,eAAe,CAAC,MAAM,EAAE,CAAC;QAC/B,EAAE,EAAC,IAAI,CAAC,iBAAiB,EACvB,MAAM,CAAC,IAAI,CAAC,iBAAiB;aAG7B,GAAG,EAAC,GAAG,EAAE,OAAO,EAAE,UAAU,KAAK,IAAI,CAAC,WAAW,CAC/C,MAAM,CAAC,UAAU;IAGvB,CAAC;IAEO,IAAI,GAAG,CAAC;QACd,GAAG,CAAC,YAAY,GAAG,CAAC,CAAC;QACrB,GAAG,CAAC,YAAY,GAAG,CAAC,CAAC;QACrB,GAAG,CAAC,cAAc,GAAG,CAAC,CAAC;QACvB,GAAG,CAAC,UAAU,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,eAAe,EAAC,UAAU,GAAI,CAAC;YAClC,GAAG,CAAC,OAAO,GAAG,UAAU,CAAC,aAAa;YACtC,EAAE,EAAC,OAAO,IAAI,OAAO,CAAC,GAAG,EAAE,CAAC;gBAC1B,EAAE,EAAC,OAAO,CAAC,KAAK,EACZ,YAAY,GAAG,YAAY,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK;gBAEpD,EAAE,EAAC,OAAO,CAAC,KAAK,EACZ,YAAY,GAAG,YAAY,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK;gBAEpD,EAAE,EAAC,OAAO,CAAC,OAAO,EACd,cAAc,GAAG,cAAc,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO;gBAE1D,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG;YAC5C,CAAC;QACH,CAAC;QACD,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,UAAU;QAC9C,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,UAAU;QAC9C,IAAI,CAAC,kBAAkB,CAAC,cAAc,EAAE,UAAU;QAClD,MAAM,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI;IAClD,CAAC;IAEO,gBAAgB,CAAC,cAAc,EAAE,UAAU,EAAE,CAAC;QACpD,EAAE,EAAC,cAAc,CAAC,MAAM,IAAI,CAAC,EAC3B,MAAM;QAER,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAY,aAAE,cAAc,EAAE,UAAU;IACpF,CAAC;IAEO,gBAAgB,CAAC,cAAc,EAAE,UAAU,EAAE,CAAC;QACpD,EAAE,EAAC,cAAc,CAAC,MAAM,IAAI,CAAC,EAC3B,MAAM;QAER,OAAO,CAAC,GAAG,CAAC,UAAU;QACtB,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAW,YAAE,cAAc,EAAE,UAAU;IACnF,CAAC;IAEO,kBAAkB,CAAC,cAAc,EAAE,UAAU,EAAE,CAAC;QACtD,EAAE,EAAC,cAAc,CAAC,MAAM,IAAI,CAAC,EAC3B,MAAM;QAER,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAU,WAAE,cAAc,EAAE,UAAU;IAClF,CAAC;IAEO,KAAK,CAAC,IAAI,EAAE,cAAc,EAAE,UAAU,EAAE,CAAC;QAC/C,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;YAC3B,cAAc,EAAE,cAAc;YAC9B,aAAa,EAAE,UAAU;YACzB,OAAO,EAAE,UAAU;QACrB,CAAC;IACH,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MWzMU,wCAAW;IAGtB,EAEG,AAFH,0DAEG,AAFH,EAEG,cACW,CAAC;QANV,IA4BN,CA3BS,MAAM,GAA2B,GAAG,CAAC,GAAG;QAM9C,KAAK,CAAC,IAAI,GAAG,IAAI;QACjB,EAAoB,AAApB,kBAAoB;QACpB,MAAM,CAAC,gBAAgB,CAAC,CAAS,WAAE,KAAK,GAAI,CAAC;YAC3C,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,GAAI,CAAC;gBAC1C,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,OAAO;gBAC/B,EAAE,EAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;oBACtB,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;oBAClC,QAAQ;gBACV,CAAC;YACH,CAAC;QACH,CAAC,EAAE,KAAK;IACV,CAAC;IAED,EAIG,AAJH,2KAIG,AAJH,EAIG,CACH,GAAG,CAAC,KAAa,EAAE,QAAmB,EAAE,CAAC;QACvC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,EAAE,QAAQ;IACjC,CAAC;;;;;;;;;;;SCzBa,yCAAY,GAAQ,CAAC;IACnC,MAAM,CAAC,yCAAM,CAAC,YAAY;AAC5B,CAAC;SAUgB,yCAAa,GAAQ,CAAC;IACrC,MAAM,CAAC,yCAAM,CAAC,aAAa;AAC7B,CAAC;;;;SCbe,yCAAQ,CAAC,OAAe,EAAE,IAAY,EAAO,CAAC;IAC5D,MAAM,CAAC,yCAAM,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI;AACtC,CAAC;;;;;A7BVD,KAAK,CAAC,2BAAK,GAAG,CAAC;IACb,KAAK,EAAE,CAAC;QACN,mBAAmB,EAAE,yCAAmB;QACxC,WAAW,EAAE,yCAAW;QACxB,WAAW,EAAE,yCAAW;QACxB,WAAW,EAAE,yCAAW;QACxB,SAAS,EAAE,yCAAS;QACpB,WAAW,EAAE,yCAAW;QACxB,WAAW,EAAE,yCAAW;QACxB,QAAQ,EAAE,yCAAQ;IACpB,CAAC;IACD,WAAW,EAAE,CAAC;QACZ,KAAK,EAAE,yCAAK;QACZ,QAAQ,EAAE,yCAAQ;QAClB,cAAc,EAAE,yCAAc;QAC9B,WAAW,EAAE,yCAAW;QACxB,WAAW,EAAE,wCAAW;QACxB,YAAY,EAAE,yCAAY;QAC1B,aAAa,EAAE,yCAAa;QAC5B,QAAQ,EAAE,yCAAQ;IACpB,CAAC;AACH,CAAC;IAED,wCAAqB,GAAN,2BAAK","sources":["src/index.ts","src/modules/media/Media.module.ts","src/modules/media/Context.ts","src/modules/media/Stream.ts","src/Message.ts","src/modules/media/Blob.ts","src/modules/media/Composition.ts","src/modules/media/Recorder.ts","src/modules/mediaPlayer/MediaPlayer.module.ts","src/modules/mediaPlayer/gesture/GestureType.ts","src/modules/mediaPlayer/gesture/GestureHandler.ts","src/modules/mediaPlayer/gesture/Gesture.ts","src/modules/mediaPlayer/keyValue/KeyValue.ts","src/modules/mediaPlayer/keyValue/FileSystemStorage.ts","src/modules/mediaPlayer/keyValue/LocalStorage.ts","src/modules/mediaPlayer/Window.ts","src/modules/mediaPlayer/blobs/Blobs.ts","src/modules/mediaPlayer/blobs/tuio/TUIOBlobs.js","src/modules/mediaPlayer/blobs/OSCMessageAddress.ts","src/modules/mediaPlayer/blobs/tuio/blobs/BlobItemsController_blob.js","src/modules/mediaPlayer/blobs/tuio/decoder/Decoder.js","src/modules/mediaPlayer/blobs/tuio/blobs/blob/Blob_blob.js","src/modules/mediaPlayer/blobs/tuio/touches/TouchesController_blob.js","src/modules/mediaPlayer/blobs/tuio/touches/TouchesController.js","src/modules/mediaPlayer/blobs/tuio/blobs/BlobItemsController_skel.js","src/modules/mediaPlayer/blobs/tuio/blobs/blob/Blob_skel.js","src/modules/mediaPlayer/blobs/tuio/touches/TouchesController_skel.js","src/modules/mediaPlayer/OscListener.ts","src/modules/mediaPlayer/Info.ts","src/modules/mediaPlayer/Log.ts"],"sourcesContent":["import { getAvailableDevices, getDeviceId, startDevice, drawElement, drawVideo, blobToImage, Composition, Recorder } from './modules/media/Media.module';\r\nimport { Blobs, KeyValue, GestureHandler, GestureType, OscListener, getMediaInfo, getDeviceInfo, logAlarm } from './modules/mediaPlayer/MediaPlayer.module';\r\n\r\nconst broox = {\r\n  media: {\r\n    getAvailableDevices: getAvailableDevices,\r\n    getDeviceId: getDeviceId,\r\n    startDevice: startDevice,\r\n    drawElement: drawElement,\r\n    drawVideo: drawVideo,\r\n    blobToImage: blobToImage,\r\n    Composition: Composition,\r\n    Recorder: Recorder\r\n  },\r\n  mediaPlayer: {\r\n    Blobs: Blobs,\r\n    KeyValue: KeyValue,\r\n    GestureHandler: GestureHandler,\r\n    GestureType: GestureType,\r\n    OscListener: OscListener,\r\n    getMediaInfo: getMediaInfo,\r\n    getDeviceInfo: getDeviceInfo,\r\n    logAlarm: logAlarm\r\n  }\r\n};\r\n\r\nexport default broox;","/**\r\n * Provides classes and functions related to the rendering process of different media.\r\n *\r\n * #### {@link Composition}\r\n *\r\n * Allows to create an image based on many media objects (images, videos, etc.).\r\n *\r\n * ``` typescript\r\n * // example\r\n * const composition = new broox.media.Composition(width, height, borderWidth);\r\n * composition.addElement(webcam, 0, 0, webcam.videoWidth, webcam.videoHeight, 1, false);\r\n * composition.get().then(blob => {\r\n *    image.src = URL.createObjectURL(blob);\r\n * )};\r\n * ```\r\n * <br/>\r\n * Allows to record a stream.\r\n *\r\n * ``` typescript\r\n * // example\r\n * const recorder = new broox.media.Recorder(stream);\r\n * recorder.start();\r\n * setTimeout(() => {\r\n *   recorder.stop().then(blob => {\r\n *     console.log(blob);\r\n *   )};\r\n * }, 10000);\r\n * ```\r\n * <br/>\r\n *\r\n * #### Functions\r\n * - {@link getAvailableDevices}\r\n *   <br/>\r\n *   Gets navigator media devices.\r\n * - {@link getDeviceId}\r\n *   <br/>\r\n *   Gets navigator device id.\r\n * - {@link startDevice}\r\n *   <br/>\r\n *   Starts a given device (user media).\r\n * - {@link drawElement}\r\n *   <br/>\r\n *   Renders an element in a given 2d context.\r\n * - {@link drawVideo}\r\n *   <br/>\r\n *   Renders a video in a given 2d context.\r\n* - {@link blobToImage}\r\n *   <br/>\r\n *   Converts a blob to an image.\r\n * \r\n * @module media\r\n */\r\nexport { drawElement, drawVideo } from './Context';\r\nexport { getAvailableDevices, getDeviceId, startDevice } from './Stream';\r\nexport { blobToImage } from './Blob';\r\nexport { Composition } from './Composition';\r\nexport { Recorder } from './Recorder';","/**\r\n * Renders a video element in the given 2d context.\r\n * @param video Video to draw in context.\r\n * @param context 2d context.\r\n * @param destinationWidth Destination width.\r\n * @param destinationHeight Destination height.\r\n * @param destinationX Destination x position.\r\n * @param destinationY Destination y position.\r\n * @param mirror Value indicating whether to mirror the image before.\r\n * ``` typescript\r\n * // example\r\n * const canvas = document.createElement('canvas');\r\n * canvas.width = width;\r\n * canvas.height = height;\r\n * const context = canvas.getContext('2d');\r\n * const video = document.getElementById('video')\r\n * broox.media.drawElement(video, context, width, height, 0, 0, false);\r\n * ```\r\n */\r\nexport function drawVideo(video: HTMLVideoElement, context: CanvasRenderingContext2D, destinationWidth: number, destinationHeight: number, destinationX: number, destinationY: number, mirror = false) {\r\n  drawElement(video, context, video.videoWidth, video.videoHeight, destinationWidth, destinationHeight, destinationX, destinationY, mirror);\r\n}\r\n\r\n/**\r\n * Renders an element in the given 2d context.\r\n * @param element Element to draw in context.\r\n * @param context 2d context.\r\n * @param sourceWidth Source width.\r\n * @param sourceHeight Source height.\r\n * @param destinationWidth Destination width.\r\n * @param destinationHeight Destination height.\r\n * @param destinationX Destination x position.\r\n * @param destinationY Destination y position.\r\n * @param mirror Value indicating whether to mirror the image before.\r\n * ``` typescript\r\n * // example\r\n * const canvas = document.createElement('canvas');\r\n * canvas.width = width;\r\n * canvas.height = height;\r\n * const context = canvas.getContext('2d');\r\n * const element = document.getElementById('img')\r\n * broox.media.drawElement(element, context, element.width, element.height, width, height, 0, 0, false);\r\n * ```\r\n */\r\nexport function drawElement(element: CanvasImageSource, context: CanvasRenderingContext2D, sourceWidth: number, sourceHeight: number, destinationWidth: number, destinationHeight: number, destinationX: number, destinationY: number, mirror = false) {\r\n  context.save();\r\n  // get ratios\r\n  const horizontalRatio = destinationWidth / sourceWidth;\r\n  const verticalRatio = destinationHeight / sourceHeight;\r\n  let height = 0;\r\n  let width = 0;\r\n  let leftOffset = 0;\r\n  let topOffset = 0;\r\n  // take center of element vertically or horizontally depending on ratio\r\n  if(verticalRatio > horizontalRatio) {\r\n    height = sourceHeight;\r\n    width = destinationWidth / verticalRatio;\r\n    leftOffset = (sourceWidth - width) / 2;\r\n  }\r\n  else {\r\n    width = sourceWidth;\r\n    height = destinationHeight / horizontalRatio;\r\n    topOffset = (sourceHeight - height) / 2;\r\n  }\r\n  if(mirror) {\r\n    context.scale(-1, 1);\r\n    context.drawImage(element, leftOffset, topOffset, width, height, -destinationX, destinationY, -destinationWidth, destinationHeight);\r\n  }\r\n  else {\r\n    context.drawImage(element, leftOffset, topOffset, width, height, destinationX, destinationY, destinationWidth, destinationHeight);\r\n  }\r\n  context.restore();\r\n}","import Message from '../../Message';\r\n\r\n/**\r\n * Gets all available devices.\r\n * @returns Promise with list of available devices.\r\n * ``` typescript\r\n * // example\r\n * broox.media.getAvailableDevices().then(devices => {});\r\n * ```\r\n */\r\nexport function getAvailableDevices(): Promise<any[]> {\r\n  return new Promise((resolve, reject) => {\r\n    navigator.mediaDevices.enumerateDevices()\r\n      .then(devices => {\r\n        const result = devices.map(d => {\r\n          return {\r\n            id: d.deviceId,\r\n            name: d.label\r\n          }\r\n        });\r\n        resolve(result);\r\n      })\r\n      .catch(error => {\r\n        reject(error.message);\r\n      })\r\n  });\r\n}\r\n\r\n/**\r\n * Gets the id for the given device name.\r\n * @param name Device name.\r\n * @returns Promise with device id if found. Error otherwise.\r\n * ``` typescript\r\n * // example\r\n * broox.media.getDeviceId('OBS Virtual Camera').then(id => {\r\n *   broox.media.start(id, 1080, 1920).then(stream => {});\r\n * });\r\n * ```\r\n */\r\nexport function getDeviceId(name: string): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    navigator.mediaDevices.enumerateDevices()\r\n      .then(devices => {\r\n        for(let i = 0; i < devices.length; i++) {\r\n          if(devices[i].label === name) {\r\n            resolve(devices[i].deviceId);\r\n            return;\r\n          }\r\n        }\r\n        reject(Message.deviceNotFound);\r\n      })\r\n      .catch(error => {\r\n        reject(error.message);\r\n      })\r\n  });\r\n}\r\n\r\n/**\r\n * Starts the media stream.\r\n * @param deviceId Webcam identifier.\r\n * @param width Webcam width.\r\n * @param height Webcam height.\r\n * @returns MediaStream object to display webcam content.\r\n * ``` typescript\r\n * // example\r\n * broox.media.getDeviceId('OBS Virtual Camera').then(id => {\r\n *   broox.media.start(id, 1080, 1920).then(stream => {});\r\n * });\r\n * ```\r\n */\r\nexport function startDevice(deviceId: string, width: number, height: number) {\r\n  return navigator.mediaDevices.getUserMedia({ video: { deviceId: deviceId, width: width, height: height }});\r\n}","enum Message {\r\n  deviceNotFound = 'Device not found',\r\n  forbiddenProjectName = 'Please use a different project name'\r\n}\r\n\r\nexport default Message;","/**\r\n * Converts a blob to an image.\r\n * @returns Promise with the resulting image.\r\n * ``` typescript\r\n * // example\r\n * broox.media.blobToImage(blobg).then(image => {});\r\n * ```\r\n */\r\n export function blobToImage(blob: Blob) {\r\n  return new Promise((resolve) => {\r\n    const image = new Image();\r\n    image.onload = () => {\r\n      URL.revokeObjectURL(image.src);\r\n      resolve(image);\r\n    }\r\n    image.src = URL.createObjectURL(blob);\r\n  });\r\n}","import { drawElement } from './Context';\r\n\r\n/**\r\n * Generates images composition based on different elements.\r\n * ``` typescript\r\n * // example\r\n * const composition = new broox.media.Composition(width, height, borderWidth);\r\n * composition.addElement(webcam, 0, 0, webcam.videoWidth, webcam.videoHeight, 1, false);\r\n * composition.get().then(blob => {\r\n *   image.src = URL.createObjectURL(blob);\r\n * )};\r\n * ```\r\n */\r\nexport class Composition {\r\n  private canvas: HTMLCanvasElement;\r\n  private context: CanvasRenderingContext2D;\r\n  private scale: number;\r\n  private borderWidth: number;\r\n\r\n  /**\r\n   * Generates an instance of the Composition class.\r\n   * @param width Composition width.\r\n   * @param height Composition height.\r\n   * @param borderWidth Border width.\r\n   */\r\n  constructor(width: number, height: number, borderWidth: number) {\r\n    this.borderWidth = borderWidth;\r\n    this.canvas = document.createElement('canvas');\r\n    this.scale = (width - this.borderWidth * 2) / width;\r\n    this.canvas.width = width;\r\n    this.canvas.height = height * this.scale + this.borderWidth * 2;\r\n    this.context = this.canvas.getContext('2d');\r\n    this.context.fillStyle = 'white';\r\n    this.context.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n  }\r\n\r\n  /**\r\n   * Adds an element to the composition.\r\n   * @param element Element to add.\r\n   * @param x Element X position.\r\n   * @param y Element Y position.\r\n   * @param width Element width.\r\n   * @param height Element height.\r\n   * @param scale Element scale.\r\n   * @param mirror Value indicating whether to mirror the image.\r\n   * ``` typescript\r\n   * // example\r\n   * const composition = new broox.media.Composition(width, height, borderWidth);\r\n   * composition.addElement(webcam, 0, 0, webcam.videoWidth, webcam.videoHeight, 1, false);\r\n   * composition.addElement(image, 0, 0, image.width, image.height, 1, false);\r\n   * ```\r\n   */\r\n  addElement(element: any, x: number, y: number, width: number, height: number, scale: number, mirror: boolean) {\r\n    const destinationWidth = this.canvas.width * this.scale * scale;\r\n    const destinationHeight = (this.canvas.height - 2 * this.borderWidth) * scale;\r\n    drawElement(element, this.context, width, height, destinationWidth, destinationHeight, this.borderWidth + x * scale * this.scale, this.borderWidth + y * scale * this.scale, mirror);\r\n  }\r\n\r\n  /**\r\n   * Clears the composition.\r\n   */\r\n  clear() {\r\n    this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n  }\r\n\r\n  /**\r\n   * Gets the resulting composition.\r\n   * @returns A promise with a blob containing the composition.\r\n   * ``` typescript\r\n   * // example\r\n   * composition.get().then(blob => {\r\n   *   image.src = URL.createObjectURL(blob);\r\n   * )};\r\n   * ```\r\n   */\r\n  get(): Promise<Blob> {\r\n    return new Promise((resolve) => {\r\n      this.canvas.toBlob(blob => resolve(blob), 'image/png', 1);\r\n    });\r\n  }\r\n}","/**\r\n * Creates a video based on a stream.\r\n * ``` typescript\r\n * // example\r\n * const recorder = new broox.media.Recorder(stream);\r\n * recorder.start();\r\n * setTimeout(() => {\r\n *   recorder.stop().then(blob => {\r\n *     console.log(blob);\r\n *   )};\r\n * }, 10000);\r\n * ```\r\n */\r\nexport class Recorder {\r\n  private stream: MediaStream;\r\n  private recorder: MediaRecorder;\r\n  private promise: Promise<Blob>;\r\n  private resolve: (value: Blob | PromiseLike<Blob>) => void;\r\n\r\n  /**\r\n   * Creates an instance of the Recorder class. \r\n   */\r\n  constructor();\r\n  /**\r\n   * Creates an instance of the Recorder class.\r\n   * @param stream Stream to record.\r\n   */\r\n  constructor(stream: MediaStream);\r\n  constructor(stream?: MediaStream) {\r\n    this.stream = stream;\r\n  }\r\n\r\n  /**\r\n   * Sets a stream to record.\r\n   * @param stream Stream to record.\r\n   */\r\n  setStream(stream: MediaStream) {\r\n    this.stream = stream;\r\n  }\r\n\r\n  /**\r\n   * Starts recording.\r\n   */\r\n  start() {\r\n    const self = this;\r\n    this.promise = new Promise((resolve, reject) => {\r\n      self.resolve = resolve;\r\n    });\r\n    let data = [];\r\n    this.recorder = new MediaRecorder(this.stream);\r\n    this.recorder.ondataavailable = e => data.push(e.data);\r\n    this.recorder.onstop = () => {\r\n      self.resolve(new Blob(data, { type: 'video/webm' }));\r\n    };\r\n    this.recorder.start();\r\n  }\r\n\r\n  /**\r\n   * Stops recording.\r\n   */\r\n  stop(): Promise<Blob> {\r\n    this.recorder.state === 'recording' && this.recorder.stop();\r\n    return this.promise;\r\n  }\r\n}","/**\r\n * Provides context to the apps executed within the Media Player.\r\n *\r\n * #### {@link Blobs}\r\n *\r\n * Parses tuio events recieved by apps and keeps track of the blobs.\r\n *\r\n * ``` typescript\r\n * // example\r\n * const blobs = new broox.mediaPlayer.Blobs();\r\n * const activeItems = blobs.getActiveItems();\r\n * ```\r\n * <br/>\r\n *\r\n * #### {@link KeyValue}\r\n *\r\n * Allows apps to persist json values associated to a project and a key.\r\n *\r\n * ``` typescript\r\n * // example\r\n * const user = {\r\n *   firstName: 'John',\r\n *   lastName: 'Doe'\r\n * };\r\n * const keyValue = new broox.mediaPlayer.KeyValue();\r\n * keyValue.set('testApp', 'profile', user);\r\n * const profile = keyValue.get('testApp', 'profile');\r\n * ```\r\n * <br/>\r\n *\r\n * #### {@link GestureHandler}\r\n *\r\n * Parses OSC events recieved by apps and allows to handle the different gestures.\r\n *\r\n * ``` typescript\r\n * // example\r\n * const gestureHandler = new broox.mediaPlayer.GestureHandler(500, 2);\r\n * gestureHandler.onPresence(() => console.log('Presence'));\r\n * ```\r\n * <br/>\r\n *\r\n * #### {@link OscListener}\r\n *\r\n * Listens to OSC events and executes callback functions.\r\n *\r\n * ``` typescript\r\n * // example\r\n * const oscListener = new broox.mediaPlayer.OscListener();\r\n * oscListener.add('/start', () => console.log('Start'));\r\n * ```\r\n * <br/>\r\n * \r\n * #### Functions\r\n * - {@link getMediaInfo}\r\n *   <br/>\r\n *   Gets media information.\r\n * - {@link getDeviceInfo}\r\n *   <br/>\r\n *   Gets device information.\r\n *   <br/>\r\n * - {@link logAlarm}\r\n *   <br/>\r\n *   Logs an alarm.\r\n * \r\n * @module mediaPlayer\r\n */\r\nexport { GestureType } from './gesture/GestureType';\r\nexport { GestureHandler } from './gesture/GestureHandler';\r\nexport { KeyValue } from './keyValue/KeyValue';\r\nexport { Blobs } from './blobs/Blobs';\r\nexport { OscListener } from './OscListener';\r\nexport { getMediaInfo, getDeviceInfo } from './Info';\r\nexport { logAlarm } from './Log';\r\n","/**\r\n * Gesture types\r\n * @module Gesture\r\n */\r\nexport enum GestureType {\r\n  LeftHandUp = 'left_hand_up',\r\n  RightHandUp = 'right_hand_up',\r\n  BothHandsUp = 'both_hands_up',\r\n  PointsLeft = 'points_left',\r\n  PointsRight = 'points_right',\r\n  LeftHandOnChest = 'left_hand_on_chest',\r\n  RightHandOnChest = 'right_hand_on_chest',\r\n  BothHandsOnChest = 'both_hands_on_chest'\r\n}","import { Gesture } from './Gesture';\r\nimport { GestureType } from './GestureType';\r\n\r\n/**\r\n * Parses gestures coming from Vision Node and allows to add callbacks to perform an action when such gestures occure.\r\n * ``` typescript\r\n * // example\r\n * const gestureHandler = new broox.mediaPlayer.GestureHandler(500, 2);\r\n * gestureHandler.onPresence(() => console.log('Presence'));\r\n * ```\r\n */\r\nexport class GestureHandler {\r\n  private time: number;\r\n  private delay: number;\r\n  private listening: boolean = true;\r\n  private gestures: Gesture[] = [];\r\n  private presenceCallback: () => any;\r\n  private bothHandsUpCallback: () => any;\r\n  private leftHandUpCallback: () => any;\r\n  private rightHandUpCallback: () => any;\r\n  private handOnChestCallback: () => any;\r\n\r\n  /**\r\n   * Creates an instance of the GestureHandler class.\r\n   * @param time Time lapse in milliseconds before accepting a gesture as such.\r\n   * @param delay Time lapse in seconds before listening to other gestures once a gesture is accepted.\r\n   */\r\n  constructor(time: number, delay: number) {\r\n    this.time = time;\r\n    this.delay = delay;\r\n    const self = this;\r\n    // listen osc events\r\n    window.addEventListener('message', event => {\r\n      for(let i = 0; i < event.data.length; i++) {\r\n        if(event.data[i].address === '/de/person') {\r\n          self.add(event.data[i].args);\r\n        }\r\n      }\r\n    }, false);\r\n  }\r\n\r\n  /**\r\n   * Adds a potential gesture to be processed.\r\n   * @param args OSC event args.\r\n   */\r\n  add(args: any[]): void {\r\n    if(this.listening) {\r\n      if(args[0] === 'id') {\r\n        this.presenceCallback && this.presenceCallback();\r\n      }\r\n      else if(args[0] === 'prop' && args[2] === 'poses') {\r\n        const types = args.slice(3);\r\n        if(types.length) {\r\n          const gesture = new Gesture(types, new Date().getTime());\r\n          this.gestures.push(gesture);\r\n          this.check();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Adds a callback function for the \"presence\" gesture.\r\n   * @param callback Function that will be executed when the presence gesture is detected.\r\n   */\r\n  onPresence(callback: () => any) {\r\n    this.presenceCallback = callback;\r\n  }\r\n\r\n  /**\r\n   * Adds a callback function for the \"both hands up\" gesture.\r\n   * @param callback Function that will be executed when the \"both hands up\" gesture is detected.\r\n   */\r\n  onBothHandsUp(callback: () => any) {\r\n    this.bothHandsUpCallback = callback;\r\n  }\r\n\r\n  /**\r\n   * Adds a callback function for the \"left hand up\" gesture.\r\n   * @param callback Function that will be executed when the \"left hand up\" gesture is detected.\r\n   */\r\n  onLeftHandUp(callback: () => any) {\r\n    this.leftHandUpCallback = callback;\r\n  }\r\n\r\n  /**\r\n   * Adds a callback function for the \"right hand up\" gesture.\r\n   * @param callback Function that will be executed when the \"right hand up\" gesture is detected.\r\n   */\r\n  onRightHandUp(callback: () => any) {\r\n    this.rightHandUpCallback = callback;\r\n  }\r\n\r\n  /**\r\n   * Adds a callback function for the \"hand on chest\" gesture.\r\n   * @param callback Function that will be executed when the \"hand on chest\" gesture is detected.\r\n   */\r\n  onHandOnChest(callback: () => any) {\r\n    this.handOnChestCallback = callback;\r\n  }\r\n\r\n  /**\r\n   * Checks whether a gesture was made. \r\n   */\r\n  private check(): void {\r\n    // get last gesture\r\n    const lastIndex = this.gestures.length - 1;\r\n    const lastGesture = this.gestures[lastIndex];\r\n    const lastGestureTypes = lastGesture.getTypes();\r\n    if(lastGestureTypes.length === 1) {\r\n      const type = lastGestureTypes[0];\r\n      // if gesture is BothHandsUp or BothHandsOnChest, send the event\r\n      if(type === GestureType.BothHandsUp || type === GestureType.BothHandsOnChest) {\r\n        this.send(type);\r\n      }\r\n      else if(this.gestures.length > 1) {\r\n        const lastTimestamp = lastGesture.getTimestamp();\r\n        let i = lastIndex;\r\n        let gesture: Gesture = null;\r\n        // find last gesture before the time lapse defined\r\n        while(!gesture && --i >= 0 && this.gestures[i].getTypes().indexOf(type) >= 0) {\r\n          console.log(this.gestures[i]);\r\n          if(lastTimestamp - this.gestures[i].getTimestamp() > this.time) {\r\n            gesture = this.gestures[i];\r\n          }\r\n        }\r\n        if(gesture) {\r\n          this.send(type);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Executes a callback function based on the gesture made.\r\n   * @param type Gesture made.\r\n   */\r\n  private send(type: string): void {\r\n    console.log('Gesture ' + type + ' sent');\r\n    this.listening = false;\r\n    this.gestures = [];\r\n    setTimeout(() => {\r\n      this.listening = true;\r\n    }, this.delay * 1000);\r\n    if(type === GestureType.BothHandsUp) {\r\n      this.bothHandsUpCallback && this.bothHandsUpCallback();\r\n    }\r\n    else if(type === GestureType.LeftHandUp) {\r\n      this.leftHandUpCallback && this.leftHandUpCallback();\r\n    }\r\n    else if(type === GestureType.RightHandUp) {\r\n      this.rightHandUpCallback && this.rightHandUpCallback();\r\n    }\r\n    else if(type === GestureType.BothHandsOnChest) {\r\n      this.handOnChestCallback && this.handOnChestCallback();\r\n    }\r\n  }\r\n}","/**\r\n * Represents a series of gestures in at a given time\r\n */\r\nexport class Gesture {\r\n  private types: string[] = [];\r\n  private timestamp: number = 0;\r\n\r\n  /**\r\n   * Creates an instance of the Gesture class.\r\n   * @param types Gesture types.\r\n   * @param timestamp Timestamp.\r\n   */\r\n  constructor(types: string[], timestamp: number) {\r\n    this.types = types;\r\n    this.timestamp = timestamp;\r\n  }\r\n\r\n  /**\r\n   * Gets the types.\r\n   * @returns Gesture types.\r\n   */\r\n  getTypes(): string[] {\r\n    return this.types;\r\n  }\r\n\r\n  /**\r\n   * Gets the timestamp.\r\n   * @returns Timestamp.\r\n   */\r\n  getTimestamp(): number {\r\n    return this.timestamp;\r\n  }\r\n}","import { FileSystemStorage } from './FileSystemStorage';\r\nimport { LocalStorage } from './LocalStorage';\r\nimport { Storage } from './Storage';\r\nimport { Window } from '../Window';\r\nimport Message from '../../../Message';\r\n\r\n/**\r\n * Stores and retrieves values in json format.\r\n * Allows to persist data and be able to retrieve it after the media changes or the Media Player is reloaded.\r\n * It can be useful for persisting configuration parameters modified at runtime.\r\n * A project name and a key need to be specified in order to store and retrieve the data.\r\n */\r\nexport class KeyValue {\r\n  private contents: { [key: string]: any; } = {};\r\n  private storage: Storage;\r\n\r\n  /**\r\n   * Creates an instance of the KeyValue class.\r\n   */\r\n  constructor() {\r\n    if(Window.inElectron()) {\r\n      this.storage = new FileSystemStorage(Window.getKeyValue());\r\n    }\r\n    else {\r\n      this.storage = new LocalStorage();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets a value in storage\r\n   * @param projectName Project name\r\n   * @param key Key assigned to the value to store\r\n   * @param value Value to store\r\n   * ``` typescript\r\n   * // example\r\n   * const user = {\r\n   *   firstName: 'John',\r\n   *   lastName: 'Doe'\r\n   * };\r\n   * const keyValue = new broox.mediaPlayer.KeyValue();\r\n   * keyValue.set('testApp', 'profile', user);\r\n   * ```\r\n   */\r\n  setValue(projectName: string, key: string, value: any) {\r\n    if(projectName === 'config') {\r\n      console.error(Message.forbiddenProjectName);\r\n      return;\r\n    }\r\n    // get storage\r\n    let content = this.getContent(projectName);\r\n    if(!content) {\r\n      content = {};\r\n    }\r\n    content[key] = value;\r\n    this.storage.write(projectName, content);\r\n  }\r\n\r\n  /**\r\n   * Gets a value from a content in storage\r\n   * @param projectName Project name\r\n   * @param key Key\r\n   * @returns The value for the given key\r\n   * ``` typescript\r\n   * // example\r\n   * const keyValue = new broox.mediaPlayer.KeyValue();\r\n   * const user = keyValue.get('testApp', 'profile');\r\n   * console.log('User', user);\r\n   * ```\r\n   */\r\n  getValue(projectName: string, key: string): any {\r\n    const storage = this.getContent(projectName);\r\n    return storage ? storage[key] : null;\r\n  }\r\n\r\n  /**\r\n   * Gets a content from memory or storage\r\n   * @param projectName Project name\r\n   * @returns The content with the given name if exists, null otherwise\r\n   */\r\n  private getContent(projectName: string): any {\r\n    // get storage from memory\r\n    if(this.contents[projectName]) {\r\n      return this.contents[projectName];\r\n    }\r\n    else {\r\n      // get content from storage\r\n      try {\r\n        return this.storage.read(projectName);\r\n      } catch (error) {\r\n        // the content does not exist\r\n        return null;\r\n      }\r\n    }\r\n  }\r\n}","import { Storage } from './Storage';\r\n\r\nexport class FileSystemStorage implements Storage {\r\n  private keyValue: any;\r\n\r\n  /**\r\n   * \r\n   * @param keyValue Key value manager \r\n   */\r\n  constructor(keyValue: any) {\r\n    this.keyValue = keyValue;\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param projectName Project name\r\n   * @param content Json content\r\n   */\r\n   write(projectName: string, content: any): void {\r\n    this.keyValue.write(projectName, JSON.stringify(content));\r\n   }\r\n\r\n   /**\r\n    * \r\n    * @param projectName Project name\r\n    */\r\n   read(projectName: string): any {\r\n    const content = JSON.parse(this.keyValue.read(projectName));\r\n    return content;\r\n   }\r\n}","import { Storage } from './Storage';\r\n\r\nexport class LocalStorage implements Storage {\r\n  /**\r\n   * \r\n   * @param projectName Project name\r\n   * @param content Json content\r\n   */\r\n  write(projectName: string, content: any): void {\r\n    localStorage.setItem(projectName, JSON.stringify(content));\r\n  }\r\n  /**\r\n   * \r\n   * @param projectName Project name\r\n   * @returns Json content for the given project\r\n   */\r\n  read(projectName: string): any {\r\n    const content = localStorage.getItem(projectName);\r\n    if(content) {\r\n      return JSON.parse(content);\r\n    }\r\n    return null;\r\n  }\r\n}","import path from \"path\";\r\n\r\n/**\r\n * Window wrapper\r\n */\r\nexport class Window {\r\n  static inElectron() {\r\n    // @ts-ignore\r\n    return !!window.electron;\r\n  }\r\n\r\n  static getKeyValue() {\r\n    // @ts-ignore\r\n    return window.app && window.app.keyValue;\r\n  }\r\n\r\n  static getMediaInfo() {\r\n    // @ts-ignore\r\n    return window.app && window.app.media;\r\n  }\r\n\r\n  static getDeviceInfo() {\r\n    // @ts-ignore\r\n    return window.app && window.app.device;\r\n  }\r\n\r\n  static logAlarm(subject: string, text: string) {\r\n    //@ts-ignore\r\n    window.app && window.app.logAlarm(subject, text);\r\n  }\r\n}","import TUIOBlobs from './tuio/TUIOBlobs'\r\n\r\n/**\r\n * Parses tuio events recieved by apps and keeps track of the blobs.\r\n *``` typescript\r\n * // example\r\n * const blobs = new broox.mediaPlayer.Blobs();\r\n * const activeItems = blobs.getActiveItems();\r\n * ```\r\n */\r\nexport class Blobs {\r\n  private defaultAddress = null;\r\n  private defaultController = new TUIOBlobs(null);\r\n  private controllers = new Map();\r\n  private touchTarget = window;\r\n\r\n  /**\r\n   * Attaches listeners to window\r\n   */\r\n  constructor() {\r\n    window.addEventListener('message', this.onMessage.bind(this), false);\r\n    window.requestAnimationFrame(this.loop.bind(this));\r\n  }\r\n\r\n  /**\r\n   * Sets touch target.\r\n   * @param target Target.\r\n   */\r\n  setTouchTarget(target) {\r\n    if(target) {\r\n      this.touchTarget = target;\r\n      this.loopControllers(controller => {\r\n        controller.setTouchTarget(target);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets input.\r\n   * @param inputs Inputs.\r\n   * @param touchEventsTarget Target.\r\n   */\r\n  setInput(inputs = [], touchEventsTarget = null) {\r\n    this.controllers = new Map();\r\n    this.defaultAddress = null;\r\n    this.defaultController = null;\r\n\r\n    for(let input of inputs) {\r\n      let address = input.address;\r\n      if(!address) {\r\n        continue;\r\n      }\r\n      let controller = new TUIOBlobs(address);\r\n      if(this.controllers.has(address)) { \r\n        // only allow one controller with the same input message address\r\n        continue;\r\n      }\r\n      if(!this.defaultAddress) {\r\n        this.defaultAddress = address;\r\n      }\r\n      if(input.touchEvents != null) {\r\n        controller.setTouchEventsEnabled(input.touchEvents);\r\n      }\r\n      this.controllers.set(address, controller);\r\n    }\r\n    this.setTouchTarget(touchEventsTarget ? touchEventsTarget : this.touchTarget);\r\n  }\r\n\r\n  /**\r\n   * Sets blobs space transform.\r\n   * @param x X.\r\n   * @param y Y.\r\n   * @param width Width.\r\n   * @param height Height.\r\n   */\r\n  setBlobsSpaceTransform(x, y, width, height) {\r\n    this.loopControllers(controller => {\r\n      controller.setBlobsSpaceTransform(x, y, width, height);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Sets touch event as enabled or disabled.\r\n   * @param isEnabled Value indicating whether is enabled.\r\n   * @param address Address.\r\n   */\r\n  setTouchEventsEnabled(isEnabled, address = null) {\r\n    let controller = this.getController(address);\r\n    if(controller) {\r\n      controller.setTouchEventsEnabled(isEnabled)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets controller.\r\n   * @param address Address.\r\n   * @returns Controller.\r\n   */\r\n  getController(address = null) {\r\n    if(!address && this.defaultController) {\r\n      return this.defaultController\r\n    }\r\n    else if(!address && this.defaultAddress) {\r\n      return this.controllers.get(this.defaultAddress)\r\n    }\r\n    else if(address){\r\n      return this.controllers.get(address);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Gets active items.\r\n   * @param address Address.\r\n   * @returns Active items.\r\n   */\r\n  getActiveItems(address = null) {\r\n    let controller = this.getController(address);\r\n    if(!controller) {\r\n      return new Map();\r\n    }\r\n    return controller.getActiveItems();\r\n  }\r\n\r\n  private onMessage(evt) {\r\n    this.onOSCMessage(evt.data);\r\n  }\r\n\r\n  private onOSCMessage(json){\r\n    this.loopControllers(controller => {\r\n      controller.onOSCMessage(json);\r\n    });\r\n    if(this.defaultController) {\r\n      const address = this.defaultController.getMessageAddress();\r\n      if(address) {\r\n        this.controllers.set(address, this.defaultController);\r\n        this.defaultController = null;\r\n        if(!this.defaultAddress) {\r\n          this.defaultAddress = address;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private loopControllers(action) {\r\n    if(this.defaultController) {\r\n      action(this.defaultController);\r\n    }\r\n    else {\r\n      for(let [address, controller] of this.controllers) {\r\n        action(controller);\r\n      }\r\n    }\r\n  }\r\n\r\n  private loop() {\r\n    let touchesAdded = [];\r\n    let touchesMoved = [];\r\n    let touchesDeleted = [];\r\n    let touchesAll = [];\r\n    this.loopControllers(controller => {\r\n      let touches = controller.updateTouches();\r\n      if(touches && touches.all) {\r\n        if(touches.added) {\r\n            touchesAdded = touchesAdded.concat(touches.added);\r\n        }\r\n        if(touches.moved) {\r\n            touchesMoved = touchesMoved.concat(touches.moved);\r\n        }\r\n        if(touches.deleted) {\r\n            touchesDeleted = touchesDeleted.concat(touches.deleted);\r\n        }\r\n        touchesAll = touchesAll.concat(touches.all);\r\n      }\r\n    });\r\n    this.sendTouchesAdded(touchesAdded, touchesAll);\r\n    this.sendTouchesMoved(touchesMoved, touchesAll);\r\n    this.sendTouchesDeleted(touchesDeleted, touchesAll);\r\n    window.requestAnimationFrame(this.loop.bind(this));\r\n  }\r\n\r\n  private sendTouchesAdded(touchesChanged, touchesAll) {\r\n    if(touchesChanged.length == 0) {\r\n      return;\r\n    }\r\n    this.touchTarget.dispatchEvent(this.event('touchstart', touchesChanged, touchesAll));\r\n  }\r\n\r\n  private sendTouchesMoved(touchesChanged, touchesAll) {\r\n    if(touchesChanged.length == 0) {\r\n      return;\r\n    }\r\n    console.log(touchesAll);\r\n    this.touchTarget.dispatchEvent(this.event('touchmove', touchesChanged, touchesAll));\r\n  }\r\n\r\n  private sendTouchesDeleted(touchesChanged, touchesAll) {\r\n    if(touchesChanged.length == 0) {\r\n      return;\r\n    }\r\n    this.touchTarget.dispatchEvent(this.event('touchend', touchesChanged, touchesAll));\r\n  }\r\n\r\n  private event(type, touchesChanged, touchesAll) {\r\n    return new TouchEvent(type, {\r\n      changedTouches: touchesChanged,\r\n      targetTouches: touchesAll,\r\n      touches: touchesAll\r\n    });\r\n  }\r\n}","import OSCMessageAddress from \"../OSCMessageAddress\";\r\nimport BlobItemsController_blob from \"./blobs/BlobItemsController_blob\";\r\nimport BlobItemsController_skel from \"./blobs/BlobItemsController_skel\";\r\n\r\nfunction TUIOBlobs(oscMessageAddress) {\r\n    let self = this;\r\n    let messageAddress;\r\n    \r\n    this.onFrameUpdate = null;\r\n    this.onAdded = null;\r\n    this.onDeleted = null;\r\n\r\n    let itemsController;\r\n    let touchTarget = window;\r\n    let touchEventsEnabled = true;\r\n\r\n    let blobsSpaceTransform = {\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n        offset: {x: 0, y: 0}\r\n    }\r\n\r\n    init(oscMessageAddress);\r\n\r\n    this.setTouchTarget = function(target) {\r\n        touchTarget = target;\r\n        if(!itemsController){return;}\r\n        itemsController.setTouchTarget(target);\r\n    }\r\n\r\n    this.setTouchEventsEnabled = function(isEnabled) {\r\n        touchEventsEnabled = isEnabled;\r\n    }\r\n\r\n    this.setMessageAddress = function(oscMessageAddress) {\r\n        if(messageAddress === oscMessageAddress) {return;}\r\n\r\n        if(!oscMessageAddress.includes(\"/tuio/\")) {\r\n            console.log(`${oscMessageAddress} is not a TUIO address`);\r\n            return;\r\n        }\r\n\r\n        messageAddress = oscMessageAddress;\r\n\r\n        switch(messageAddress) {\r\n            case OSCMessageAddress.skel:\r\n                itemsController = new BlobItemsController_skel(touchTarget, onItemAdded, onItemDeleted);\r\n                break;\r\n            default:\r\n                itemsController = new BlobItemsController_blob(touchTarget, onItemAdded, onItemDeleted);\r\n        }\r\n    }\r\n\r\n    this.setBlobsSpaceTransform = function(x, y, width, height) {\r\n        blobsSpaceTransform.width = width;\r\n        blobsSpaceTransform.height = height;\r\n        blobsSpaceTransform.offset = {x, y};\r\n    }\r\n\r\n    this.getMessageAddress = function() {\r\n        return messageAddress;\r\n    }\r\n\r\n    this.getActiveItems = function() {\r\n        if(!itemsController) {\r\n            return new Map();\r\n        }\r\n        return itemsController.activeItems;\r\n    }\r\n    \r\n    this.onOSCMessage = function(json){\r\n        \r\n        for(var i in json){\r\n            var args = json[i].args\r\n            if(args == undefined){continue;}\r\n            var address = json[i].address;\r\n\r\n            if(address && !messageAddress) {\r\n                self.setMessageAddress(address);\r\n            }\r\n            else if(address !== messageAddress ){continue;}\r\n\r\n            if(!itemsController) {return;}\r\n\r\n            switch(args[0]){\r\n                case \"fseq\":\r\n                    if(args.length <= 1) {return;}\r\n                    onNewFrame(args[1]);\r\n                    break;\r\n\r\n                case \"set\":\r\n                    itemsController.updateSet(address, args, blobsSpaceTransform);\r\n                    break;\r\n\r\n                case \"alive\":\r\n                    updateAlive(args);\r\n                    break;\r\n                default:\r\n                break;\r\n            }\r\n        }\r\n\r\n        return messageAddress;\r\n    }\r\n\r\n    this.updateTouches = function() {\r\n        if(!itemsController || !touchEventsEnabled){return null;}\r\n        return itemsController.updateTouches();\r\n    }\r\n\r\n    //\r\n    // fseq\r\n    // \r\n    function onNewFrame(fseq){\r\n        if(self.onFrameUpdate == null){return;}\r\n        self.onFrameUpdate(fseq);\r\n    }\r\n\r\n    //\r\n    // alive\r\n    //\r\n\r\n    function updateAlive(idsAlive){\r\n        var idsToRemove = [];\r\n\r\n        for(let [id, item] of itemsController.activeItems) {\r\n            let isAlive = false;\r\n            for(var aliveItem of idsAlive){\r\n                isAlive = aliveItem == id;\r\n                if(isAlive){\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if(!isAlive) {\r\n                console.log(`${id} is not included in ${idsAlive} -> remove it`);\r\n                idsToRemove.push(id);\r\n            }\r\n        }\r\n\r\n        for(let id of idsToRemove) {\r\n            itemsController.deleteItem(id);\r\n        }\r\n    }\r\n\r\n    function onItemAdded(id, x, y){\r\n        if(self.onAdded == null){return;}\r\n        self.onAdded(id, x, y);\r\n    }\r\n\r\n    function onItemDeleted(id){\r\n        if(self.onDeleted == null){return;}\r\n        self.onDeleted(id);\r\n    }\r\n\r\n\r\n    function init(oscMessageAddress) {\r\n        //self.setMessageAddress(oscMessageAddress);\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default TUIOBlobs;","enum OscMessageAddress {\r\n  object = '/tuio/2Dobj',\r\n  cursor = '/tuio/2Dcur',\r\n  blob = '/tuio/2Dblb',\r\n  marker = '/tuio/broox_markers',\r\n  skel = '/tuio/skel'\r\n}\r\n\r\nexport default OscMessageAddress","import * as Decoder from \"../decoder/Decoder\"\r\nimport Blob_blob from \"./blob/Blob_blob\"\r\nimport TouchesController_blob from \"../touches/TouchesController_blob\";\r\n\r\nfunction BlobItemsController_blob(touchTarget, onAdded, onDeleted) {\r\n    let self = this;\r\n    let decodeSet = Decoder.decodeSet_blob;\r\n    let touchesController = new TouchesController_blob(touchTarget);\r\n\r\n    this.activeItems = new Map();\r\n\r\n    this.setTouchTarget = function(target) {\r\n        touchesController.setTouchTarget(target);\r\n    }\r\n   \r\n    this.updateSet = function(address, args, blobsSpaceTransform) {\r\n        let itemData = decodeSet(address, args, blobsSpaceTransform);\r\n    \r\n        let id = itemData.id;\r\n        if(!id) {\r\n            console.error(\"set error: every item needs to have an id\");\r\n            return;\r\n        }\r\n\r\n        if (!this.activeItems.has(id)) {\r\n            let blob = new Blob_blob(id, itemData.classId);\r\n            this.activeItems.set(id, blob);\r\n            blob.update(itemData);\r\n            onAdded(id);\r\n        }\r\n        else{\r\n            let blob = this.activeItems.get(id);\r\n            blob.update(itemData);\r\n        }\r\n    }\r\n\r\n    this.deleteItem = function(id) {\r\n        this.activeItems.delete(id);\r\n        onDeleted(id);\r\n    }\r\n\r\n\r\n    this.updateTouches = function() {\r\n        return touchesController.update(self.activeItems);\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default BlobItemsController_blob;","import OSCMessageAddress from \"../../OSCMessageAddress\";\r\n\r\nexport function decodeSet_skel(address, args, blobsSpaceTransform) {\r\n    var data = {};\r\n    data.id = args[1].toString();\r\n\r\n    let scale = args[6];\r\n\r\n    let offset = blobsSpaceTransform.offset;\r\n    let width = blobsSpaceTransform.width;\r\n    let height = blobsSpaceTransform.height;\r\n\r\n    data.hand_left = {\r\n        x: args[2],\r\n        y: args[3],\r\n        width: scale * width,\r\n        height: scale * height\r\n    }\r\n\r\n    data.hand_right = {\r\n        x: args[4],\r\n        y: args[5],\r\n        width: scale * width,\r\n        height: scale * height\r\n    }\r\n    data.scale = scale;\r\n\r\n    if(isSkelJointDetected(data.hand_left)){\r\n        data.hand_left.x = data.hand_left.x * width + offset.x;\r\n        data.hand_left.y = data.hand_left.y * height + offset.y;\r\n    }\r\n    \r\n    if(isSkelJointDetected(data.hand_right)){\r\n        data.hand_right.x = data.hand_right.x * width + offset.x;\r\n        data.hand_right.y = data.hand_right.y * height + offset.y;\r\n    }\r\n\r\n    return data;\r\n}\r\n\r\nfunction isSkelJointDetected(joint){\r\n    return joint.x >= 0 && joint.y >= 0\r\n}\r\n\r\n\r\n\r\nexport function decodeSet_blob(address, args, blobsSpaceTransform) {\r\n    const BlobData = {\r\n        type: null,\r\n        id: \"\",\r\n        classId: \"\",\r\n        x: 0,\r\n        y: 0,\r\n        rotation: 0,\r\n        width: 0,\r\n        height: 0,\r\n        velocityX: 0,\r\n        velocityY: 0,\r\n        timeAlive: 0\r\n    }\r\n\r\n    let offset = blobsSpaceTransform.offset;\r\n    let width = blobsSpaceTransform.width;\r\n    let height = blobsSpaceTransform.height;\r\n\r\n    var blobData = Object.assign({}, BlobData);\r\n    blobData.id = args[1].toString();\r\n\r\n    switch(address){\r\n        case OSCMessageAddress.blob:\r\n            if(!checkBlobDataFormat(args, 13)){return null;}\r\n            blobData.x = args[2];\r\n            blobData.y = args[3];\r\n            blobData.rotation = args[4];\r\n            blobData.width = args[5];\r\n            blobData.height = args[6];\r\n            blobData.velocityX = args[8];\r\n            blobData.velocityY = args[9];\r\n            blobData.timeAlive = args[12];\r\n            break;\r\n        case OSCMessageAddress.object:\r\n            if(!checkBlobDataFormat(args, 11)){return null;}\r\n            blobData.classId = args[2];\r\n            blobData.x = args[3];\r\n            blobData.y = args[4];\r\n            blobData.rotation = args[5];\r\n            break;\r\n        case OSCMessageAddress.cursor:\r\n            if(!checkBlobDataFormat(args, 7)){return null;}\r\n            blobData.x = args[2];\r\n            blobData.y = args[3];\r\n            blobData.width = 60 / width;\r\n            blobData.height = blobData.width;\r\n           break;\r\n        case OSCMessageAddress.marker:\r\n            blobData.classId = args[2];\r\n            blobData.x = args[3];\r\n            blobData.y = args[4];\r\n            blobData.rotation = args[5];\r\n            blobData.width = args[6];\r\n            break;\r\n        default:\r\n            console.error(`decodeSet_blob does not handle ${address}`);\r\n            break;\r\n    }\r\n\r\n    blobData.x = blobData.x * width + offset.x;\r\n    blobData.y = blobData.y * height + offset.y;\r\n    blobData.width = blobData.width * width;\r\n    blobData.height = blobData.height * height;\r\n\r\n    return blobData;\r\n}\r\n\r\nfunction checkBlobDataFormat(args, length){\r\n    if(args.length != length){\r\n        console.error(\"Wrong Tuio set format. Supposed to have length \"+ length + \" and has length \"+ args.length);\r\n        return false;\r\n    }\r\n    return true;\r\n}","function Blob_blob(id, classId = \"\"){\r\n    this.id = id;\r\n    this.classId = classId;\r\n\r\n    this.update = (data) => {\r\n        this.width = data.width ? data.width : 0;\r\n        this.height = data.height ? data.height : 0;\r\n        this.rotation = data.rotation ? data.rotation : 0;\r\n        this.timeAlive = data.timeAlive ? data.timeAlive : 0;\r\n\r\n        if(!data.velocityX && !data.velocityY && this.x && this.y && data.x && data.y){\r\n            this.velocityX = data.x - this.x;\r\n            this.velocityY = data.y - this.y;\r\n        }\r\n        else{\r\n            this.velocityX = data.velocityX ? data.velocityX : 0;\r\n            this.velocityY = data.velocityY ? data.velocityY : 0;\r\n        }\r\n\r\n        this.x = data.x;\r\n        this.y = data.y;\r\n    }\r\n}\r\n\r\nexport default Blob_blob;","import TouchesController from './TouchesController'\r\n\r\nfunction TouchesController_blob(touchTarget) {\r\n    let self = this;\r\n    let controller = new TouchesController(touchTarget);\r\n\r\n    this.activeTouches = new Map();\r\n\r\n    this.setTouchTarget = function(target) {\r\n        controller.target = target;\r\n    }\r\n\r\n    this.update = function(blobsMap) {\r\n        let added = [];\r\n        let moved = [];\r\n        let deleted = [];\r\n        let all = [];\r\n\r\n        for(let [id, blob] of blobsMap) {\r\n\r\n            if(!self.activeTouches.has(id)) {\r\n                added.push(blob);\r\n                self.activeTouches.set(id, blob);\r\n            }\r\n            else {\r\n                moved.push(blob);\r\n            }\r\n            all.push(blob);\r\n        }\r\n\r\n        // check if any was deleted\r\n        for(let [id, blob] of this.activeTouches) {\r\n            if(!blobsMap.has(id)) {\r\n                // was deleted\r\n                deleted.push(blob);\r\n            }\r\n        }\r\n\r\n        for (let blob of deleted) {\r\n            this.activeTouches.delete(blob.id);\r\n        }\r\n\r\n        return controller.update(added, moved, deleted, all, extraTouchProperties);\r\n    }\r\n\r\n    function extraTouchProperties(blob) {\r\n        return {\r\n            radiusX: blob.width,\r\n            radiusY: blob.height,\r\n            rotationAngle: blob.rotation\r\n        }\r\n    }\r\n}\r\n\r\nexport default TouchesController_blob;","function TouchesController(target = window) {\r\n    let self = this;\r\n    let activeBlobTouches = new Map(); // blob.id -> touch.id\r\n    \r\n    this.activeBlobs = new Map();\r\n    this.target = target;\r\n\r\n    this.update = function(blobsAdded, blobsMoved, blobsDeleted, blobsAll, extraTouchProperties = null) {\r\n        let touchesAdded = blobsAdded.map(blob => {\r\n            return touchFor(blob, extraTouchProperties);\r\n        });\r\n\r\n        let touchesMoved = blobsMoved.map(blob => {\r\n            return touchFor(blob, extraTouchProperties);\r\n        })\r\n\r\n        let touchesDeleted = blobsDeleted.map(blob => {\r\n            return touchFor(blob, extraTouchProperties);\r\n        })\r\n\r\n        let touchesAll = blobsAll.map(blob => {\r\n            return touchFor(blob, extraTouchProperties);\r\n        })\r\n\r\n        for (let blob of blobsDeleted) {\r\n            activeBlobTouches.delete(blob.id, extraTouchProperties);\r\n        }\r\n\r\n        return {\r\n            added: touchesAdded,\r\n            moved: touchesMoved,\r\n            deleted: touchesDeleted,\r\n            all: touchesAll\r\n        }\r\n    }\r\n\r\n    function touchFor(blob, extraTouchProperties) {\r\n        let id;\r\n\r\n        if(!activeBlobTouches.has(blob.id)) {\r\n            id = generateTouchId();\r\n            activeBlobTouches.set(blob.id, id);\r\n        }\r\n        else{\r\n            id = activeBlobTouches.get(blob.id);\r\n        }\r\n\r\n        let extraProperties = extraTouchProperties ? extraTouchProperties(blob) : {};\r\n        let properties = Object.assign({\r\n            identifier: id,\r\n            target: self.target,\r\n            pageX: blob.x,\r\n            pageY: blob.y,\r\n            clientX: blob.x,\r\n            clientY: blob.y,\r\n            screenX: blob.x,\r\n            screenY: blob.y\r\n        }, extraProperties);\r\n\r\n        return new Touch(properties);\r\n    }\r\n\r\n    function generateTouchId() {\r\n        return Date.now() + Math.round(Math.random() * 1000);\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default TouchesController;","import * as Decoder from \"../decoder/Decoder\"\r\nimport Blob_skel from \"./blob/Blob_skel\"\r\nimport TouchesController_skel from \"../touches/TouchesController_skel\";\r\n\r\nfunction BlobItemsController_skel(touchTarget, onAdded, onDeleted) {\r\n    let self = this;\r\n    let decodeSet = Decoder.decodeSet_skel;\r\n    let touchesController = new TouchesController_skel(touchTarget);\r\n\r\n    this.activeItems = new Map();\r\n   \r\n    this.setTouchTarget = function(target) {\r\n        touchesController.setTouchTarget(target);\r\n    }\r\n\r\n    this.updateSet = function(address, args, blobsSpaceTransform) {\r\n        let itemData = decodeSet(address, args, blobsSpaceTransform);\r\n\r\n        let id = itemData.id;\r\n        if(!id) {\r\n            console.error(\"set error: every item needs to have an id\");\r\n            return;\r\n        }\r\n\r\n        if (!this.activeItems.has(id)) {\r\n            let blob = new Blob_skel(id);\r\n            self.activeItems.set(id, blob);\r\n            blob.update(itemData);\r\n            onAdded(id);\r\n        }\r\n        else{\r\n            let blob = this.activeItems.get(id);\r\n            blob.update(itemData);\r\n        }\r\n    }\r\n\r\n    this.deleteItem = function(id) {\r\n        this.activeItems.delete(id);\r\n        onDeleted(id);\r\n    }\r\n\r\n\r\n    this.updateTouches = function() {\r\n        return touchesController.update(self.activeItems);\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default BlobItemsController_skel;","function Blob_skel(id) {\r\n    this.id = id;\r\n    this.hand_left = {\r\n        id: id + \"_hand_left\",\r\n        x: -1,\r\n        y: -1\r\n    }\r\n    this.hand_right = {\r\n        id: id + \"_hand_right\",\r\n        x: -1,\r\n        y: -1\r\n    }\r\n\r\n    this.scale = -1.0;\r\n\r\n    this.update = (data) => {\r\n        this.hand_left.x = data.hand_left.x;\r\n        this.hand_left.y = data.hand_left.y;\r\n        this.hand_left.width = data.hand_left.width;\r\n        this.hand_left.height = data.hand_left.height;\r\n\r\n        this.hand_right.x = data.hand_right.x;\r\n        this.hand_right.y = data.hand_right.y;\r\n        this.hand_right.width = data.hand_right.width;\r\n        this.hand_right.height = data.hand_right.height;\r\n\r\n        this.scale = data.scale;\r\n    }\r\n\r\n    this.isHandValid = function(hand) {\r\n        return hand.x >= 0 && hand.y >= 0;\r\n    }\r\n\r\n    this.validHands = function() {\r\n        let hands = [];\r\n        if(this.isHandValid(this.hand_left)) {\r\n            hands.push(this.hand_left);\r\n        }\r\n        if(this.isHandValid(this.hand_right)) {\r\n            hands.push(this.hand_right);\r\n        }\r\n\r\n        return hands;\r\n    }\r\n}\r\n\r\nexport default Blob_skel;","import TouchesController from './TouchesController'\r\n\r\nfunction TouchesController_skel(touchTarget) {\r\n    let self = this;\r\n    let controller = new TouchesController(touchTarget);\r\n\r\n    this.activeTouches = new Map();\r\n\r\n    this.setTouchTarget = function(target) {\r\n       controller.target = target;\r\n    }\r\n\r\n    this.update = function(skelsMap) {\r\n        let handsSet = new Set();\r\n\r\n        let handsAdded = [];\r\n        let handsMoved = [];\r\n        let handsDeleted = [];\r\n        let handsAll = [];\r\n\r\n        for(let [id, skel] of skelsMap) {\r\n            let validHands = skel.validHands();\r\n\r\n            for(let hand of validHands) {\r\n                if(!self.activeTouches.has(hand.id)) {\r\n                    handsAdded.push(hand);\r\n                    self.activeTouches.set(hand.id, hand);\r\n                }\r\n                else {\r\n                    handsMoved.push(hand);\r\n                }\r\n\r\n                handsSet.add(hand.id);\r\n                handsAll.push(hand);\r\n            }\r\n        }\r\n\r\n        // check if any was deleted\r\n        for(let [id, hand] of this.activeTouches) {\r\n            if(!handsSet.has(id)) {\r\n                // was deleted\r\n                handsDeleted.push(hand);\r\n            }\r\n        }\r\n\r\n        for (let hand of handsDeleted) {\r\n            this.activeTouches.delete(hand.id);\r\n        }\r\n\r\n        return controller.update(handsAdded, handsMoved, handsDeleted, handsAll);\r\n    }\r\n}\r\n\r\nexport default TouchesController_skel;","/**\r\n * Listens to OSC events and executes callback functions.\r\n * ``` typescript\r\n * // example\r\n * const oscListener = new broox.mediaPlayer.OscListener();\r\n * oscListener.add('/start', () => console.log('Start'));\r\n * ```\r\n */\r\nexport class OscListener {\r\n  private events: Map<string, () => any> = new Map<string, () => any>();\r\n\r\n  /**\r\n   * Creates an instance of the OscListener class.\r\n   */\r\n  constructor() {\r\n    const self = this;\r\n    // listen osc events\r\n    window.addEventListener('message', event => {\r\n      for(let i = 0; i < event.data.length; i++) {\r\n        const e = event.data[i].address;\r\n        if(self.events.has(e)) {\r\n          const callback = self.events.get(e);\r\n          callback();\r\n        }\r\n      }\r\n    }, false);\r\n  }\r\n\r\n  /**\r\n   * Adds a callback function to the given event.\r\n   * @param event Event name to listen to.\r\n   * @param callback Function to execute when the event is recieved.\r\n   */\r\n  add(event: string, callback: () => any) {\r\n    this.events.set(event, callback);\r\n  }\r\n}","import{ Window } from './Window';\r\n\r\n/**\r\n * Gets media information.\r\n * @returns Media information.\r\n * ``` typescript\r\n * // example\r\n * const mediaInfo = broox.mediaPlayer.getMediaInfo();\r\n * ```\r\n */\r\nexport function getMediaInfo(): any {\r\n  return Window.getMediaInfo();\r\n}\r\n\r\n/**\r\n * Gets device information.\r\n * @returns Device information.\r\n * ``` typescript\r\n * // example\r\n * const deviceInfo = broox.mediaPlayer.getDeviceInfo();\r\n * ```\r\n */\r\n export function getDeviceInfo(): any {\r\n  return Window.getDeviceInfo();\r\n}","import{ Window } from './Window';\r\n\r\n/**\r\n * Logs an alarm.\r\n * @param subject Alarm subject.\r\n * @param text Alarm text.\r\n * ``` typescript\r\n * // example\r\n * broox.mediaPlayer.logAlarm('Error', e.message);\r\n * ```\r\n */\r\nexport function logAlarm(subject: string, text: string): any {\r\n  return Window.logAlarm(subject, text);\r\n}\r\n"],"names":[],"version":3,"file":"broox.js.map"}